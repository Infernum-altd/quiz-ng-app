{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth-guard.service.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/achievements-list/achievements-list.component.ts","./src/app/dashboard/achievements-list/achievements-list.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/rating-list/rating-list.component.ts","./src/app/dashboard/rating-list/rating-list.component.html","./src/app/game/game-answer/game-answer.component.ts","./src/app/game/game-answer/game-answer.component.html","./src/app/game/game-boolean-answer/game-boolean-answer.component.ts","./src/app/game/game-boolean-answer/game-boolean-answer.component.html","./src/app/game/game-finish/game-finish.component.ts","./src/app/game/game-finish/game-finish.component.html","./src/app/game/game-optional-answer/game-optional-answer.component.ts","./src/app/game/game-optional-answer/game-optional-answer.component.html","./src/app/game/game-question/game-question.component.ts","./src/app/game/game-question/game-question.component.html","./src/app/game/game-sequence-answer/game-sequence-answer.component.ts","./src/app/game/game-sequence-answer/game-sequence-answer.component.html","./src/app/game/game-settings/game-settings.component.ts","./src/app/game/game-settings/game-settings.component.html","./src/app/game/game-start/game-start.component.ts","./src/app/game/game-start/game-start.component.html","./src/app/game/game-string-answer/game-string-answer.component.ts","./src/app/game/game-string-answer/game-string-answer.component.html","./src/app/image-upload/image-upload.component.ts","./src/app/image-upload/image-upload.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/gender.enum.ts","./src/app/models/moderator-comment.ts","./src/app/models/notification-status.enum.ts","./src/app/models/question.model.ts","./src/app/models/quiz.model.ts","./src/app/models/role.enum.ts","./src/app/models/status-type.enum.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/profile/admin-users/admin-users.component.ts","./src/app/profile/admin-users/admin-users.component.html","./src/app/profile/change-password/change-password.component.ts","./src/app/profile/change-password/change-password.component.html","./src/app/profile/favorite/favorite.component.ts","./src/app/profile/favorite/favorite.component.html","./src/app/profile/friends/friends.component.ts","./src/app/profile/friends/friends.component.html","./src/app/profile/left-bar/left-bar.component.ts","./src/app/profile/left-bar/left-bar.component.html","./src/app/profile/my-quizzes/my-quizzes.component.ts","./src/app/profile/my-quizzes/my-quizzes.component.html","./src/app/profile/my-quizzes/reject-messages-dialog/reject-messages-dialog.component.ts","./src/app/profile/my-quizzes/reject-messages-dialog/reject-messages-dialog.component.html","./src/app/profile/pending-quizzes/pending-quizzes.component.ts","./src/app/profile/pending-quizzes/pending-quizzes.component.html","./src/app/profile/played-game/game-result-dialog/game-result-dialog.component.ts","./src/app/profile/played-game/game-result-dialog/game-result-dialog.component.html","./src/app/profile/played-game/played-game.component.ts","./src/app/profile/played-game/played-game.component.html","./src/app/profile/profile-navigation/profile-navigation.component.ts","./src/app/profile/profile-navigation/profile-navigation.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/user-information/user-information.component.ts","./src/app/profile/user-information/user-information.component.html","./src/app/quiz-add/add-questions/add-questions.component.ts","./src/app/quiz-add/add-questions/add-questions.component.html","./src/app/quiz-add/answer/answer.component.ts","./src/app/quiz-add/answer/answer.component.html","./src/app/quiz-add/boolean-answer/boolean-answer.component.ts","./src/app/quiz-add/boolean-answer/boolean-answer.component.html","./src/app/quiz-add/new-quiz/new-quiz.component.ts","./src/app/quiz-add/new-quiz/new-quiz.component.html","./src/app/quiz-add/optional-answer/optional-answer.component.ts","./src/app/quiz-add/optional-answer/optional-answer.component.html","./src/app/quiz-add/question/question.component.ts","./src/app/quiz-add/question/question.component.html","./src/app/quiz-add/sequence-answer/sequence-answer.component.ts","./src/app/quiz-add/sequence-answer/sequence-answer.component.html","./src/app/quiz-add/string-answer/string-answer.component.ts","./src/app/quiz-add/string-answer/string-answer.component.html","./src/app/quiz-add/submitted-quiz/submitted-quiz.component.ts","./src/app/quiz-add/submitted-quiz/submitted-quiz.component.html","./src/app/quiz-check/question-check/question-check.component.ts","./src/app/quiz-check/question-check/question-check.component.html","./src/app/quiz-check/quiz-check-nav/quiz-check-nav.component.ts","./src/app/quiz-check/quiz-check-nav/quiz-check-nav.component.html","./src/app/quiz-check/quiz-check.component.ts","./src/app/quiz-check/quiz-check.component.html","./src/app/quiz-check/quiz-info/quiz-info.component.ts","./src/app/quiz-check/quiz-info/quiz-info.component.html","./src/app/quiz/quiz-dialog/quiz-dialog.component.ts","./src/app/quiz/quiz-dialog/quiz-dialog.component.html","./src/app/quiz/quiz.component.ts","./src/app/quiz/quiz.component.html","./src/app/quizzes-page/quizzes-page.component.ts","./src/app/quizzes-page/quizzes-page.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/service/achievementsService/achievements.service.ts","./src/app/service/announcementService/announcement.service.ts","./src/app/service/canDeactivateGuardService/can-deactivate-guard.service.ts","./src/app/service/categoryService/category.service.ts","./src/app/service/current-user.service.ts","./src/app/service/dashboardService/dashboard.service.ts","./src/app/service/gameService/game.service.ts","./src/app/service/gameStateService/game-state.service.ts","./src/app/service/imageService/image.service.ts","./src/app/service/loginService/authentication.service.ts","./src/app/service/newQuizService/new-quiz.service.ts","./src/app/service/pendingQuizzesService/pending-quizzes.service.ts","./src/app/service/profileService/profile.service.ts","./src/app/service/profileService/share-id.service.ts","./src/app/service/questionService/question.service.ts","./src/app/service/quizCheckService/quiz-check.service.ts","./src/app/service/quizService/quiz.service.ts","./src/app/service/ratingService/rating.service.ts","./src/app/service/registrationService/registration.service.ts","./src/app/set-password/set-password.component.ts","./src/app/set-password/set-password.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {AuthenticationService} from '../service/loginService/authentication.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate{\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.authenticationService.logIn){\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (localStorage.getItem('currentUser') == null){\r\n      return next.handle(request);\r\n    }\r\n\r\n    const resultRequest = request.clone({\r\n      headers: request.headers.append('authorization', `${JSON.parse(localStorage.getItem('currentUser')).token}`)});\r\n    return next.handle(resultRequest);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n   imports: [\r\n      RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })\r\n   ],\r\n   exports: [\r\n      RouterModule\r\n   ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'quiz-ng-app';\r\n\r\n  constructor() {}\r\n}\r\n","<div>\r\n  <app-navigation></app-navigation>\r\n  <router-outlet></router-outlet>\r\n</div>","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { AdminUsersComponent } from './profile/admin-users/admin-users.component';\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { PendingQuizzesComponent } from './profile/pending-quizzes/pending-quizzes.component';\r\nimport { QuizCheckComponent } from './quiz-check/quiz-check.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { MatExpansionModule } from '@angular/material/expansion'\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { SubmittedQuizComponent } from './quiz-add/submitted-quiz/submitted-quiz.component';\r\nimport { FlexModule } from \"@angular/flex-layout\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { QuizDialogComponent } from './quiz/quiz-dialog/quiz-dialog.component';\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\n\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\n\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { AchievementsListComponent } from './dashboard/achievements-list/achievements-list.component';\r\nimport { RatingListComponent } from './dashboard/rating-list/rating-list.component';\r\nimport { QuizzesPageComponent } from \"./quizzes-page/quizzes-page.component\";\r\nimport { GameQuestionComponent } from './game/game-question/game-question.component';\r\nimport { GameAnswerComponent } from './game/game-answer/game-answer.component';\r\nimport { GameOptionalAnswerComponent } from './game/game-optional-answer/game-optional-answer.component';\r\nimport { GameSequenceAnswerComponent } from './game/game-sequence-answer/game-sequence-answer.component';\r\nimport { GameStringAnswerComponent } from './game/game-string-answer/game-string-answer.component';\r\nimport { GameBooleanAnswerComponent } from './game/game-boolean-answer/game-boolean-answer.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { GameStartComponent } from './game/game-start/game-start.component';\r\nimport { GameSettingsComponent } from './game/game-settings/game-settings.component';\r\nimport { GameFinishComponent } from './game/game-finish/game-finish.component';\r\nimport {QuizInfoComponent} from \"./quiz-check/quiz-info/quiz-info.component\";\r\nimport {QuestionCheckComponent} from \"./quiz-check/question-check/question-check.component\";\r\nimport {QuizCheckNavComponent} from \"./quiz-check/quiz-check-nav/quiz-check-nav.component\";\r\nimport { SetPasswordComponent } from './set-password/set-password.component';\r\nimport { PlayedGameComponent } from './profile/played-game/played-game.component';\r\nimport { GameResultDialogComponent } from './profile/played-game/game-result-dialog/game-result-dialog.component';\r\nimport {InfiniteScrollModule} from \"ngx-infinite-scroll\";\r\nimport {CanDeactivateGuardService} from \"./service/canDeactivateGuardService/can-deactivate-guard.service\";\r\nimport {MatBadgeModule} from \"@angular/material/badge\";\r\nimport { RejectMessagesDialogComponent } from './profile/my-quizzes/reject-messages-dialog/reject-messages-dialog.component';\r\nimport {UserInformationComponent} from \"./profile/user-information/user-information.component\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {FriendsComponent} from \"./profile/friends/friends.component\";\r\nimport {MyQuizzesComponent} from \"./profile/my-quizzes/my-quizzes.component\";\r\nimport {FavoriteComponent} from \"./profile/favorite/favorite.component\";\r\nimport {ChangePasswordComponent} from \"./profile/change-password/change-password.component\";\r\nimport {RegistrationComponent} from \"./registration/registration.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {AuthGuardService} from \"./_helpers/auth-guard.service\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {QuestionComponent} from \"./quiz-add/question/question.component\";\r\nimport {NewQuizComponent} from \"./quiz-add/new-quiz/new-quiz.component\";\r\nimport {AddQuestionsComponent} from \"./quiz-add/add-questions/add-questions.component\";\r\nimport {NavigationComponent} from \"./navigation/navigation.component\";\r\nimport {ProfileNavigationComponent} from \"./profile/profile-navigation/profile-navigation.component\";\r\nimport {LeftBarComponent} from \"./profile/left-bar/left-bar.component\";\r\nimport {OptionalAnswerComponent} from \"./quiz-add/optional-answer/optional-answer.component\";\r\nimport {BooleanAnswerComponent} from \"./quiz-add/boolean-answer/boolean-answer.component\";\r\nimport {StringAnswerComponent} from \"./quiz-add/string-answer/string-answer.component\";\r\nimport {AnswerComponent} from \"./quiz-add/answer/answer.component\";\r\nimport {ImageUploadComponent} from \"./image-upload/image-upload.component\";\r\nimport {SequenceAnswerComponent} from \"./quiz-add/sequence-answer/sequence-answer.component\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {JwtInterceptor} from \"./_helpers/jwt.interceptor\";\r\n\r\n\r\n\r\nconst quizCheckRoutes: Routes = [\r\n  {\r\n    path: 'quizinfo',\r\n    component: QuizInfoComponent,\r\n    outlet: 'quiznav'\r\n  },\r\n  {\r\n    path: 'qAnda',\r\n    component: QuestionCheckComponent,\r\n    outlet: 'quiznav'\r\n  }\r\n];\r\n\r\nconst profileRoutes: Routes = [\r\n  {\r\n    path: 'profinfo',\r\n    component: UserInformationComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'adminUsers',\r\n    component: AdminUsersComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'pendingQuizzes',\r\n    component: PendingQuizzesComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'friends',\r\n    component: FriendsComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'mygames',\r\n    component: MyQuizzesComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'favorite',\r\n    component: FavoriteComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'changePass',\r\n    component: ChangePasswordComponent,\r\n    outlet: 'profilenav'\r\n  },\r\n  {\r\n    path: 'played',\r\n    component: PlayedGameComponent,\r\n    outlet: 'profilenav'\r\n  }\r\n];\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'registration',\r\n    component: RegistrationComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'profile/:id', canActivate: [AuthGuardService],\r\n    component: ProfileComponent,\r\n    children: profileRoutes,\r\n  },\r\n  {\r\n    path: 'friends', canActivate: [AuthGuardService],\r\n    component: FriendsComponent\r\n  },\r\n  {\r\n    path: 'quizzes/:id',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'quiz',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'friends', canActivate: [AuthGuardService],\r\n    component: FriendsComponent\r\n  },\r\n  {\r\n    path: 'quizzes/:id',\r\n    component: QuizComponent\r\n  },\r\n  {\r\n    path: 'question',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'new_quiz',\r\n    component: NewQuizComponent\r\n  },\r\n  {\r\n    path: 'add_questions',\r\n    component: AddQuestionsComponent\r\n  },\r\n  {\r\n    path: 'submitted_quiz',\r\n    component: SubmittedQuizComponent\r\n  },\r\n  {\r\n    path: 'quizzes',\r\n    component: QuizzesPageComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'pendingQuizzes', canActivate: [AuthGuardService],\r\n    component: PendingQuizzesComponent\r\n  },\r\n  {\r\n    path: 'game/question/:gameId/:questionNumber',\r\n    component: GameQuestionComponent,\r\n    canDeactivate: [CanDeactivateGuardService],\r\n    runGuardsAndResolvers: 'always',\r\n  },\r\n  {\r\n    path: 'game/settings/:quizId',\r\n    component: GameSettingsComponent\r\n  },\r\n  {\r\n    path: 'game/start/:gameId',\r\n    component: GameStartComponent,\r\n    canDeactivate: [CanDeactivateGuardService]\r\n  },\r\n  {\r\n    path: 'game/finish/:gameId',\r\n    component: GameFinishComponent\r\n  },\r\n  {\r\n    path: 'pendingQuizzes', canActivate: [AuthGuardService],\r\n    component: PendingQuizzesComponent\r\n  },\r\n  {\r\n    path: 'checkquiz/:id', canActivate: [AuthGuardService],\r\n    component: QuizCheckComponent,\r\n    children: quizCheckRoutes,\r\n  },\r\n  {\r\n    path: 'adminUsers', canActivate: [AuthGuardService],\r\n    component: AdminUsersComponent\r\n  },\r\n  {\r\n    path: 'activate/:code',\r\n    component: SetPasswordComponent\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/quizzes',\r\n    pathMatch: 'full',\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    NavigationComponent,\r\n    ProfileComponent,\r\n    ProfileNavigationComponent,\r\n    LeftBarComponent,\r\n    UserInformationComponent,\r\n    FriendsComponent,\r\n    MyQuizzesComponent,\r\n    FavoriteComponent,\r\n    ChangePasswordComponent,\r\n    QuizComponent,\r\n    QuestionComponent,\r\n    OptionalAnswerComponent,\r\n    BooleanAnswerComponent,\r\n    StringAnswerComponent,\r\n    SequenceAnswerComponent,\r\n    ImageUploadComponent,\r\n    AnswerComponent,\r\n    NewQuizComponent,\r\n    AddQuestionsComponent,\r\n    SubmittedQuizComponent,\r\n    QuizzesPageComponent,\r\n    QuizDialogComponent,\r\n    AddQuestionsComponent,\r\n    DashboardComponent,\r\n    AchievementsListComponent,\r\n    RatingListComponent,\r\n    GameQuestionComponent,\r\n    GameAnswerComponent,\r\n    GameOptionalAnswerComponent,\r\n    GameSequenceAnswerComponent,\r\n    GameStringAnswerComponent,\r\n    GameBooleanAnswerComponent,\r\n    GameStartComponent,\r\n    GameSettingsComponent,\r\n    GameFinishComponent,\r\n    AdminUsersComponent,\r\n    PendingQuizzesComponent,\r\n    QuizCheckComponent,\r\n    QuestionCheckComponent,\r\n    QuizInfoComponent,\r\n    QuizCheckNavComponent,\r\n    SetPasswordComponent,\r\n    PlayedGameComponent,\r\n    GameResultDialogComponent,\r\n    RatingListComponent,\r\n    AdminUsersComponent,\r\n    PendingQuizzesComponent,\r\n    QuizCheckComponent,\r\n    QuestionCheckComponent,\r\n    QuizInfoComponent,\r\n    QuizCheckNavComponent,\r\n    RejectMessagesDialogComponent\r\n  ],\r\n    imports: [\r\n        NgbModule,\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot(appRoutes),\r\n        ReactiveFormsModule,\r\n        BrowserAnimationsModule,\r\n        MatTableModule,\r\n        MatInputModule,\r\n        MatPaginatorModule,\r\n        FlexModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatSortModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        MatRadioModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatGridListModule,\r\n        MatFormFieldModule,\r\n        MatChipsModule,\r\n        MatExpansionModule,\r\n        MatDividerModule,\r\n        MatCheckboxModule,\r\n        MatProgressSpinnerModule,\r\n        LayoutModule,\r\n        FlexLayoutModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatTabsModule,\r\n        MatButtonToggleModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule,\r\n        DragDropModule,\r\n        LayoutModule,\r\n        FlexLayoutModule,\r\n        MatProgressBarModule,\r\n        InfiniteScrollModule,\r\n        MatBadgeModule\r\n    ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [OptionalAnswerComponent, BooleanAnswerComponent, StringAnswerComponent, SequenceAnswerComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Achievement } from './../../models/achievement.model';\r\nimport { AchievementsService } from '../../service/achievementsService/achievements.service';\r\nimport { Category } from './../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-achievements-list',\r\n  templateUrl: './achievements-list.component.html',\r\n  styleUrls: ['./achievements-list.component.css']\r\n})\r\nexport class AchievementsListComponent implements OnInit {\r\n  @Input('userId') userId: number;\r\n\r\n  categories: Observable<Category[]>;\r\n  achievements: Observable<Achievement[]>;\r\n\r\n  constructor(private achievementsService: AchievementsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categories = this.achievementsService.getAchievementCategories();\r\n    this.achievements = this.achievementsService.getAchievementsByUser(this.userId);\r\n  }\r\n}\r\n","<mat-list *ngFor=\"let category of categories | async\" autosize>\r\n    <div mat-subheader>{{category.name | titlecase}}</div>\r\n    <div *ngFor=\"let achievement of achievements | async\">\r\n        <mat-list-item *ngIf=\"achievement.categoryId==category.id\">\r\n            <mat-icon mat-list-icon>star</mat-icon>\r\n            <div mat-line>{{achievement.name}}</div>\r\n            <div mat-line>{{achievement.description}}</div>\r\n            <div mat-line>\r\n                <mat-progress-bar mode=\"determinate\" [value]=\"achievement.progress\">\r\n                </mat-progress-bar>\r\n            </div>\r\n        </mat-list-item>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n</mat-list>","import {DomSanitizer} from '@angular/platform-browser';\r\nimport {ProfileService} from './../service/profileService/profile.service';\r\nimport {Observable} from 'rxjs';\r\nimport {CategoryService} from './../service/categoryService/category.service';\r\nimport {DashboardService} from './../service/dashboardService/dashboard.service';\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Quiz} from '../models/quiz.model';\r\nimport {Category} from '../models/category.model';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport {map} from 'rxjs/operators'\r\nimport {CurrentUserService} from \"../service/current-user.service\";\r\nimport {Announcement} from \"../models/announcement\";\r\nimport {AnnouncementService} from \"../service/announcementService/announcement.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  @ViewChild('ratingNavbar') ratingNavbar: MatSidenav;\r\n  @ViewChild('achievementsNavbar') achievementsNavbar: MatSidenav;\r\n\r\n  ratingIsOpen: boolean = false;\r\n  achievementIsOpen: boolean = false;\r\n\r\n\r\n  maxCards: number = 5;\r\n  userId: number = parseInt(this.currentUserService.getCurrentUser().id);\r\n\r\n  profileImage: Observable<any>;\r\n\r\n  recentQuizzes: Observable<Quiz[]>;\r\n  topQuizzes: Observable<Quiz[]>;\r\n  recommendationQuizzes: Observable<Quiz[]>;\r\n\r\n  imageMap = new Map<number, Observable<any>>();\r\n\r\n  categories: Observable<Category[]> = this.categoryService.getCategories();\r\n  quizCategory: number = -1;\r\n\r\n  rating: Observable<number>;\r\n\r\n  achievementsTotal: Observable<number>;\r\n  achievementsForUser: Observable<number>;\r\n\r\n  announcement: Announcement[];\r\n\r\n  constructor(private dashboardService: DashboardService,\r\n              private categoryService: CategoryService,\r\n              private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer,\r\n              public currentUserService: CurrentUserService,\r\n              private annoService: AnnouncementService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileService.getProfileImage(this.userId.toString()).subscribe(\r\n      (resp => this.profileImage = resp.text)\r\n    );\r\n\r\n    this.recentQuizzes = this.dashboardService.getRecentQuizzes(this.userId, this.maxCards);\r\n\r\n    this.topQuizzes = this.dashboardService.getTopQuizzes(this.maxCards);\r\n\r\n    this.recommendationQuizzes = this.dashboardService.getRecommendations(this.userId, this.maxCards);\r\n\r\n    this.rating = this.dashboardService.getRating(this.userId);\r\n\r\n    this.achievementsTotal = this.dashboardService.getAchievementsTotal();\r\n    this.achievementsForUser = this.dashboardService.getAchievementsForUser(this.userId);\r\n\r\n    this.annoService.getAnnouncement().subscribe(\r\n      resp => this.announcement = resp\r\n    );\r\n  }\r\n\r\n  achievementsOpen(): void {\r\n    if (this.ratingIsOpen) {\r\n      this.ratingNavbar.close();\r\n      this.ratingIsOpen = false;\r\n    }\r\n\r\n    this.achievementIsOpen = true;\r\n    setTimeout(() => {\r\n      this.achievementsNavbar.open();\r\n    }, 0);\r\n\r\n  }\r\n\r\n  ratingOpen(): void {\r\n    if (this.achievementIsOpen) {\r\n      this.achievementsNavbar.close();\r\n      this.achievementIsOpen = false;\r\n    }\r\n\r\n    this.ratingIsOpen = true;\r\n    setTimeout(() => {\r\n      this.ratingNavbar.open();\r\n    }, 0);\r\n  }\r\n\r\n  achievementsClose(): void {\r\n    this.achievementsNavbar.close();\r\n    this.achievementIsOpen = false;\r\n  }\r\n\r\n  ratingClose(): void {\r\n    this.ratingNavbar.close();\r\n    this.ratingIsOpen = false;\r\n  }\r\n\r\n  closeAll(): void {\r\n    if (this.ratingIsOpen) {\r\n      this.ratingNavbar.close();\r\n    }\r\n    if (this.achievementIsOpen) {\r\n      this.achievementsNavbar.close();\r\n    }\r\n  }\r\n\r\n  onQuizCategorySelected(value: number): void {\r\n    if (value === -1) {\r\n      this.topQuizzes = this.dashboardService.getTopQuizzes(this.maxCards);\r\n    } else {\r\n      this.topQuizzes = this.dashboardService.getTopQuizzesByCategory(value, this.maxCards);\r\n    }\r\n  }\r\n\r\n  getQuizImage(quizId: number): Observable<any> {\r\n    if (!this.imageMap.get(quizId)) {\r\n      this.imageMap.set(quizId, this.dashboardService.getQuizImage(quizId).pipe(\r\n        map(resp => resp.text)));\r\n    }\r\n    return this.imageMap.get(quizId);\r\n  }\r\n\r\n  goToProfile() {\r\n    this.router.navigate(['profile', this.currentUserService.getCurrentUser().id, {outlets: {profilenav: 'profinfo'}}]);\r\n  }\r\n}\r\n","<mat-drawer-container class=\"achievement-container\">\r\n\r\n  <mat-drawer #ratingNavbar (backdropClick)=\"ratingClose()\" (keydown.escape)=\"ratingClose()\" mode=\"side\"\r\n              *ngIf=\"ratingIsOpen\" position=\"end\">\r\n    <p>\r\n      <button mat-flat-button (click)=\"ratingClose()\" color=\"accent\">Close</button>\r\n    </p>\r\n    <app-rating-list [userId]=\"userId\" [ratingPos]=\"rating\"></app-rating-list>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer #achievementsNavbar (backdropClick)=\" achievementsClose()\" (keydown.escape)=\"achievementsClose()\"\r\n              mode=\"side\" *ngIf=\"achievementIsOpen\" position=\"end\">\r\n    <p>\r\n      <button mat-flat-button (click)=\"achievementsClose()\" color=\"accent\">Close</button>\r\n    </p>\r\n    <app-achievements-list [userId]=\"userId\"></app-achievements-list>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content>\r\n    <div class=\"background\" fxLayout.gt-sm=\"row\" fxLayout.gt-xs=\"column\" fxLayoutWrap fxLayoutGap=\"3rem\"\r\n         fxLayoutAlign=\"center\">\r\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"starts\">\r\n        <h2>Progress</h2>\r\n\r\n        <mat-card id=\"profile-card\">\r\n          <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"space-around\">\r\n            <img mat-card-image id=\"profile-img\" [src]=\"profileImage\"\r\n                 alt=\"Profile image\" fxFlexAlign=\"end\">\r\n          </mat-card-content>\r\n          <mat-card-actions fxLayoutAlign=\"space-around\">\r\n            <button mat-raised-button id=\"profile-button\" class=\"text\" fxFlexAlign=\"end\" color=\"accent\"\r\n                    (click)=\"goToProfile()\">\r\n              Go to\r\n              Profile\r\n            </button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n        <mat-card id=\"rating-card\" (click)=\"ratingOpen()\">\r\n          <div>\r\n            <h2 class=\"text\">{{rating |async}}<sup>TH</sup></h2>\r\n          </div>\r\n          <mat-card-footer class=\"rating\">\r\n            <h3>Rating</h3>\r\n          </mat-card-footer>\r\n        </mat-card>\r\n        <mat-card id=\"achievement-card\" (click)=\"achievementsOpen()\">\r\n          <div>\r\n            <h2 class=\"text\">{{achievementsForUser |async}} / {{achievementsTotal |async}}</h2>\r\n          </div>\r\n          <mat-card-footer class=\"rating\">\r\n            <h3>Achievements</h3>\r\n          </mat-card-footer>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n        <h2>Recent activity</h2>\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of recentQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n                 onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n                 alt=\"Game image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n          <h3 *ngIf=\"(recentQuizzes |async)==null\">No recent activity</h3>\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n          <h2>Top quizzes</h2>\r\n\r\n          <mat-form-field>\r\n            <mat-label>Select category</mat-label>\r\n            <mat-select [(value)]=\"quizCategory\" (selectionChange)=\"onQuizCategorySelected($event.value)\">\r\n              <mat-option [value]=\"-1\">View all</mat-option>\r\n              <mat-option *ngFor='let category of categories |async' [value]=\"category.id\">\r\n                {{category.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of topQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n                 onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n                 alt=\"Quiz image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n\r\n        <h2>Recommendations</h2>\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"1rem\" fxLayoutAlign=\"start\">\r\n          <mat-card class=\"game-card\" *ngFor=\"let quiz of recommendationQuizzes |async;let i=index\">\r\n            <img mat-card-image class=\"card-image\" [src]=\"getQuizImage(quiz.id) | async\"\r\n                 onerror=\"this.onerror=null; this.src='https://material.angular.io/assets/img/examples/shiba2.jpg'\"\r\n                 alt=\"Quiz image\" fxFlexAlign=\"end\">\r\n            <mat-card-content class=\"quiz-name\" fxLayout=\"column\" fxLayoutAlign=\"space-between\" fxFlexAlign=\"center\">\r\n              <h3>{{quiz.name}}</h3>\r\n            </mat-card-content>\r\n          </mat-card>\r\n          <h3 *ngIf=\"(recommendationQuizzes |async)==null\">Play some games to get recommendations</h3>\r\n        </div>\r\n\r\n        <div fxLayout.gt-xs=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"space-between\">\r\n          <h2>Announcements</h2>\r\n        </div>\r\n\r\n        <div id=\"announcements-block\">\r\n\r\n          <div class=\"announcements-list\" fxLayout=\"column\" fxLayoutGap=\"1rem\" fxLayoutAlign=\"center\">\r\n            <div *ngFor=\"let annon of announcement\">\r\n              <mat-card style=\"border: 2px solid #ff0000\" *ngIf=\"!annon.generated; else elseBlock\">\r\n                <mat-card-header>\r\n                  <mat-card-title>{{annon.date | date:'shortTime'}} </mat-card-title>\r\n                  <mat-card-subtitle>{{annon.date | date}}<br>Administrator announcement</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                  <p>\r\n                    {{annon.text}}\r\n                  </p>\r\n                </mat-card-content>\r\n              </mat-card>\r\n              <ng-template #elseBlock>\r\n                <mat-card style=\"border: 2px solid #008000\">\r\n                  <mat-card-header>\r\n                    <mat-card-title>{{annon.date | date:'shortTime'}}</mat-card-title>\r\n                    <mat-card-subtitle>{{annon.date | date}}<br>Friends activities</mat-card-subtitle>\r\n                  </mat-card-header>\r\n                  <mat-card-content>\r\n                    <p>\r\n                      {{annon.text}}\r\n                    </p>\r\n                  </mat-card-content>\r\n                </mat-card>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </mat-drawer-content>\r\n\r\n</mat-drawer-container>\r\n","import { Observable } from 'rxjs';\r\nimport { RatingService } from './../../service/ratingService/rating.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Component({\r\n  selector: 'app-rating-list',\r\n  templateUrl: './rating-list.component.html',\r\n  styleUrls: ['./rating-list.component.css']\r\n})\r\nexport class RatingListComponent implements OnInit {\r\n  @Input('userId') userId: number;\r\n  @Input('ratingPos') ratingPos: Observable<number>;\r\n\r\n  topNumber: number = 3;\r\n  range: number = 2;\r\n  topUsers: Observable<User[]>\r\n  nearUsers: Observable<User[]>;\r\n  displayedColumns: string[] = ['position', 'name', 'surname', 'rating'];\r\n\r\n\r\n  constructor(private ratingService: RatingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.topUsers = this.ratingService.getRating(0, this.topNumber);\r\n    this.nearUsers = this.ratingService.getRatingRange(this.userId, this.range);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <table mat-table matColumnDef=\"position\" [dataSource]=\"topUsers | async\">\r\n        class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"position\">\r\n            <div *matHeaderCellDef>No.</div>\r\n            <div *matCellDef=\"let user; let i=index\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">{{i+1}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <div *matHeaderCellDef>Name</div>\r\n            <div *matCellDef=\"let user\">{{user.name}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"surname\">\r\n            <div *matHeaderCellDef>Surname</div>\r\n            <div class=\"description-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">\r\n                {{user.surname}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rating\">\r\n            <div *matHeaderCellDef>Rating</div>\r\n            <div class=\"duration-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'yellow' : 'black'\">\r\n                {{user.rating}}</div>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\r\n    </table>\r\n\r\n    <mat-icon mat-list-icon *ngIf=\"((ratingPos|async)-range)>=topNumber\">more_horiz</mat-icon>\r\n\r\n\r\n    <table mat-table matColumnDef=\" position\" [dataSource]=\"nearUsers | async\">\r\n        class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"position\">\r\n            <div *matCellDef=\"let user; let i=index\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{i+(ratingPos|async)-range+1}}\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <div *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">{{user.name}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"surname\">\r\n            <div class=\"description-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{user.surname}}</div>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rating\">\r\n            <div class=\"duration-cell\" *matCellDef=\"let user\" [style.color]=\"user.id==userId ? 'red' : 'black'\">\r\n                {{user.rating}}</div>\r\n        </ng-container>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"\r\n            [class.hidden]=\"(i+(ratingPos|async)-range)<=topNumber\">\r\n        </mat-row>\r\n    </table>\r\n</div>","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n@Component({\r\n  selector: 'app-game-answer',\r\n  templateUrl: './game-answer.component.html',\r\n  styleUrls: ['./game-answer.component.css']\r\n})\r\nexport class GameAnswerComponent implements OnInit {\r\n  maxAnswerSize: number = 4;\r\n  @Input() answers: Answer[] = [];\r\n  @Input() questionId: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getSubmittedAnswers(): Answer[] {\r\n    return [];\r\n  }\r\n\r\n  getEmptyAnswer(): Answer {\r\n    return {\r\n      id: null,\r\n      questionId: null,\r\n      text: null,\r\n      correct: null,\r\n      nextAnswerId: null,\r\n      image: null,\r\n      changed: false,\r\n      deleted: false\r\n    };\r\n  }\r\n}\r\n","<p>game-answer works!</p>\r\n","import { GameAnswerComponent } from './../game-answer/game-answer.component';\r\nimport { Component } from '@angular/core';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n\r\n@Component({\r\n  selector: 'app-game-boolean-answer',\r\n  templateUrl: './game-boolean-answer.component.html',\r\n  styleUrls: ['./game-boolean-answer.component.css']\r\n})\r\nexport class GameBooleanAnswerComponent extends GameAnswerComponent {\r\n  options: string[] = [\"true\", \"false\"];\r\n  currentAnswer: string = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onAnswerClick(option: string): void {\r\n    this.currentAnswer = option;\r\n  }\r\n\r\n  getSubmittedAnswers(): Answer[] {\r\n    let answer = this.getEmptyAnswer();\r\n    answer.text = this.currentAnswer;\r\n    return [answer];\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"space-evenly\">\r\n    <mat-button-toggle-group>\r\n        <mat-button-toggle class=\"answer-button\" color=\"accent\" *ngFor=\"let option of options\"\r\n            (click)=\"onAnswerClick(option)\">\r\n            {{option | titlecase}}</mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n</div>","import { Router } from '@angular/router';\r\nimport { GameService } from './../../service/gameService/game.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Player } from 'src/app/models/game.model';\r\n\r\n@Component({\r\n  selector: 'app-game-finish',\r\n  templateUrl: './game-finish.component.html',\r\n  styleUrls: ['./game-finish.component.css']\r\n})\r\nexport class GameFinishComponent implements OnInit {\r\n  gameId: number;\r\n\r\n  rating: Observable<Player[]>;\r\n\r\n  constructor(\r\n    private gameService: GameService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRating();\r\n  }\r\n\r\n  getRating() {\r\n    this.rating = this.gameService.subscribeRating();\r\n    this.gameService.finishGame();\r\n  }\r\n\r\n  quitGame() {\r\n    this.router.navigateByUrl('dashboard');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-card>\r\n        <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <h1> Game results</h1>\r\n            <div>\r\n                <button mat-raised-button class=\"start-button\" color=\"accent\" (click)=\"quitGame()\">Quit\r\n                </button>\r\n            </div>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n            <div class=\"user-list\" fxFlexAlign=\"center\"></div>\r\n            <h2>Rating</h2>\r\n            <mat-card>\r\n                <mat-list role=\"list\">\r\n                    <mat-list-item role=\"listitem\" *ngFor=\"let player of rating |async\">\r\n                        <div class=\"mat-list-item-content\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n                            <p fxFlexAlign=\"center\">{{player.userName}}</p>\r\n                            <p fxFlexAlign=\"center\"> {{player.userScore}}</p>\r\n                        </div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </mat-card>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { GameAnswerComponent } from './../game-answer/game-answer.component';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n\r\n@Component({\r\n  selector: 'app-game-optional-answer',\r\n  templateUrl: './game-optional-answer.component.html',\r\n  styleUrls: ['./game-optional-answer.component.css']\r\n})\r\nexport class GameOptionalAnswerComponent extends GameAnswerComponent implements OnInit {\r\n  checked: boolean[] = [].fill(false, this.maxAnswerSize);\r\n\r\n  constructor(private changeDetectionRef: ChangeDetectorRef) {\r\n    super();\r\n    this.changeDetectionRef.detach();\r\n    setInterval(() => {\r\n      this.changeDetectionRef.reattach();\r\n      this.changeDetectionRef.markForCheck();\r\n    }, 1000);\r\n  }\r\n\r\n  OnInit() {\r\n  }\r\n\r\n  getSubmittedAnswers(): Answer[] {\r\n    let submittedAnswer: Answer[] = [];\r\n    this.answers.forEach(\r\n      (value, index) => {\r\n        if (this.checked[index]) {\r\n          submittedAnswer.push(value);\r\n        }\r\n      }\r\n    );\r\n\r\n    return submittedAnswer;\r\n  }\r\n\r\n}\r\n","<div class=\"container\" fxLayout=\"column\">\r\n    <p fxFlexAlign=\"center\">Select one or more answers</p>\r\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"center\">\r\n        <div *ngFor=\"let answer of answers; let i=index\" fxFlex=\"40%\" class=\"answer-option\">\r\n            <button mat-raised-button *ngIf=\"!checked[i]\" (click)=\"checked[i]=!checked[i]\" color=\"accent\"\r\n                fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <img matCardImage [src]=\"answer.image\" alt=\"https://material.angular.io/assets/img/examples/shiba2.jpg\">\r\n                {{answer.text | titlecase}}</button>\r\n            <button mat-stroked-button *ngIf=\"checked[i]\" (click)=\"checked[i]=!checked[i]\" color=\"accent\"\r\n                fxLayout=\"column\" fxLayoutAlign=\"center\"><img matCardImage\r\n                    src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\">\r\n                {{answer.text | titlecase}}</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Player } from './../../models/game.model';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { GameService } from './../../service/gameService/game.service';\r\nimport { GameStringAnswerComponent } from './../game-string-answer/game-string-answer.component';\r\nimport { GameBooleanAnswerComponent } from './../game-boolean-answer/game-boolean-answer.component';\r\nimport { GameOptionalAnswerComponent } from './../game-optional-answer/game-optional-answer.component';\r\nimport { GameAnswerComponent } from './../game-answer/game-answer.component';\r\nimport { Component, OnInit, ViewChild, ViewContainerRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, AfterViewInit, EventEmitter, HostListener, AfterViewChecked } from '@angular/core';\r\nimport { Question, QuestionType } from 'src/app/models/question.model';\r\nimport { GameSequenceAnswerComponent } from '../game-sequence-answer/game-sequence-answer.component';\r\nimport { Answer } from 'src/app/models/answer.model';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { CanComponentDeactivate } from 'src/app/service/canDeactivateGuardService/can-deactivate-guard.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-game-question',\r\n  templateUrl: './game-question.component.html',\r\n  styleUrls: ['./game-question.component.css']\r\n})\r\nexport class GameQuestionComponent implements OnInit, AfterViewChecked, CanComponentDeactivate {\r\n  @ViewChild('dynamicComponent', { read: ViewContainerRef }) answerHost;\r\n\r\n  gameId: number;\r\n\r\n  initTime: number;\r\n  questionTimer: number;\r\n\r\n  question: Question;\r\n  questionNumber: number;\r\n  player: Player; //FIXME: set user\r\n  answers: Answer[];\r\n\r\n  image: string = null;\r\n\r\n  componentRef: ComponentRef<GameAnswerComponent>;\r\n\r\n  navigationSubscription: any;\r\n  initialized: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private gameService: GameService) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n        this.initialized = false;\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gameId = this.activatedRoute.snapshot.params['gameId'];\r\n\r\n    this.player = history.state.player;\r\n    this.questionNumber = history.state.questionNumber + 1;\r\n    this.question = history.state.question;\r\n    this.initTime = history.state.questionTimer;\r\n    this.questionTimer = this.initTime;\r\n\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (!this.initialized) {\r\n      this.initialized = true;\r\n      this.loadComponent();\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  loadComponent() {\r\n    while (!this.answerHost) { }\r\n    let titleCasePipe = new TitleCasePipe();\r\n    var componentFactory: ComponentFactory<GameAnswerComponent>;\r\n    switch (titleCasePipe.transform(this.question.type)) {\r\n      case QuestionType.OPTION:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(GameOptionalAnswerComponent);\r\n        break;\r\n      case QuestionType.BOOLEAN:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(GameBooleanAnswerComponent);\r\n        break;\r\n      case QuestionType.ANSWER:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(GameStringAnswerComponent);\r\n        break;\r\n      case QuestionType.SEQUENCE:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(GameSequenceAnswerComponent);\r\n        break;\r\n    }\r\n\r\n    this.answerHost.clear();\r\n    this.componentRef = this.answerHost.createComponent(componentFactory);\r\n\r\n    this.componentRef.instance.answers = this.question.answerList;\r\n    this.componentRef.instance.questionId = this.question.id;\r\n\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  interval: NodeJS.Timeout;\r\n\r\n  startTimer() {\r\n    this.questionTimer = this.initTime;\r\n\r\n    this.interval = setInterval(() => {\r\n      if (this.questionTimer > 0) {\r\n        this.questionTimer--\r\n      } else {\r\n        clearInterval(this.interval);\r\n        this.submitAnswer();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  submitAnswer() {\r\n    let answers = this.componentRef.instance.getSubmittedAnswers();\r\n\r\n    for (let answer of answers) {\r\n      answer.questionId = this.question.id;\r\n    }\r\n\r\n    this.gameService.postAnswer(answers);\r\n  }\r\n\r\n  canDeactivate(): boolean | Observable<boolean> | Promise<boolean> {\r\n    if (window.confirm('Quit this page?')) {\r\n      this.gameService.disconnect();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"question\">\r\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"space-between\">\r\n        <div fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n            <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n                <mat-card-title>Question {{questionNumber}} : {{question.text}}\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content >\r\n                <div class=\"image\" cols=\"6\" rowHeight=\"20rem\"  fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                  <div >\r\n                    <div>\r\n                      <mat-progress-spinner [value]=\"100*(questionTimer/initTime)\" fxFlexAlign=\"center\">\r\n                      </mat-progress-spinner>\r\n                      <div id=\"time\" fxFlexAlign=\"center\">\r\n                        <h3>{{questionTimer}} sec</h3>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"image\" colspan=\"4\" *ngIf=\"question.image!=null\">\r\n                    <div class=\"w-100\">\r\n                      <img matCardImage [src] = \"question.image\" alt=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\r\n                           fxFlexAlign=\"center\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </div>\r\n        <ng-template #dynamicComponent></ng-template>\r\n    </mat-card>\r\n</div>\r\n","import { GameAnswerComponent } from './../game-answer/game-answer.component';\r\nimport { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n\r\n@Component({\r\n  selector: 'app-game-sequence-answer',\r\n  templateUrl: './game-sequence-answer.component.html',\r\n  styleUrls: ['./game-sequence-answer.component.css']\r\n})\r\nexport class GameSequenceAnswerComponent extends GameAnswerComponent implements OnInit {\r\n  constructor(private changeDetectionRef: ChangeDetectorRef) {\r\n    super();\r\n    this.changeDetectionRef.detach();\r\n    setInterval(() => {\r\n      this.changeDetectionRef.reattach();\r\n      this.changeDetectionRef.markForCheck();\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.answers, event.previousIndex, event.currentIndex);\r\n  }\r\n\r\n  getSubmittedAnswers(): Answer[] {\r\n    return this.answers;\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"column\">\r\n    <p fxFlexAlign=\"center\">Tap and hold to arrange the tiles in the correct order</p>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-evenly\">\r\n        <div cdkDropList cdkDropListOrientation=\"horizontal\" class=\"list\" (cdkDropListDropped)=\"drop($event)\">\r\n            <div class=\"box\" *ngFor=\"let answer of answers\" cdkDrag fxLayout=\"row\" fxLayoutAlign=\"center\"><img\r\n                    matCardImage [src] = \"answer.image\" alt=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"><span\r\n                    fxFlexAlign=\"center\">{{answer.text}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { FormGroup } from '@angular/forms';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { mergeMap, defaultIfEmpty } from 'rxjs/operators';\r\nimport { GameService } from './../../service/gameService/game.service';\r\nimport { CurrentUserService } from './../../service/current-user.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Game } from './../../models/game.model';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-game-settings',\r\n  templateUrl: './game-settings.component.html',\r\n  styleUrls: ['./game-settings.component.css']\r\n})\r\nexport class GameSettingsComponent implements OnInit {\r\n  gameSettingsForm = new FormGroup({\r\n    maxUserNumberControl: new FormControl(\"10\", [Validators.min(2), Validators.max(50)]),\r\n    questionTimerControl: new FormControl(\"10\", [Validators.min(5), Validators.max(50)])\r\n  });\r\n\r\n  game: Game = {\r\n    id: null,\r\n    quizId: null,\r\n    hostId: null,\r\n    questionTimer: 10,\r\n    maxUsersNumber: 10,\r\n    players: null\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private currentUserService: CurrentUserService,\r\n    private gameService: GameService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.game.quizId = +params['quizId'];\r\n    });\r\n    this.game.hostId = parseInt(this.currentUserService.getCurrentUser().id);\r\n  }\r\n\r\n  createGame(): void {\r\n    if (this.gameSettingsForm.valid) {\r\n      this.game.maxUsersNumber = this.gameSettingsForm.get('maxUserNumberControl').value;\r\n      this.game.questionTimer = this.gameSettingsForm.get('questionTimerControl').value;\r\n\r\n      this.gameService.createGame(this.game).subscribe(\r\n        response => this.router.navigate(['/game/start', response]),\r\n\r\n        err => {\r\n          console.log(\"Error creating game: \" + err)\r\n        }  //FIXME: handle errors\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-card>\r\n        <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n            <h1>Apply Settings</h1>\r\n            <button mat-raised-button color=\"accent\" (click)=\"createGame()\">Save Settings</button>\r\n        </mat-card-header>\r\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n            <h2 fxFlexAlign=\"center\">Settings</h2>\r\n            <form [formGroup]=\"gameSettingsForm\" fxLayout.gt-sm=\"row\" fxLayout=\"column\" fxFlex=\"auto\"\r\n                fxLayoutAlign=\"space-evenly\">\r\n                <mat-form-field>\r\n                    <mat-label>Max number of users</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"maxUserNumberControl\" min=\"2\" max=\"50\" required>\r\n                    <mat-error>Please enter a value between 2 and 50</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Timer for question</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"questionTimerControl\" min=\"5\" max=\"50\" required>\r\n                    <mat-error>Please enter a value between 5 and 50</mat-error>\r\n                </mat-form-field>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { map } from 'rxjs/operators';\r\nimport { AuthenticationService } from './../../service/loginService/authentication.service';\r\nimport { Player } from './../../models/game.model';\r\nimport { Observable } from 'rxjs';\r\nimport { GameService } from './../../service/gameService/game.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CurrentUserService } from 'src/app/service/current-user.service';\r\nimport { Game } from 'src/app/models/game.model';\r\nimport { CanComponentDeactivate } from 'src/app/service/canDeactivateGuardService/can-deactivate-guard.service';\r\n\r\n@Component({\r\n  selector: 'app-game-start',\r\n  templateUrl: './game-start.component.html',\r\n  styleUrls: ['./game-start.component.css']\r\n})\r\nexport class GameStartComponent implements OnInit, CanComponentDeactivate {\r\n  gameId: number;\r\n\r\n  player: Player = {\r\n    userId: null,\r\n    userScore: 0,\r\n    userName: null,\r\n    authorize: false\r\n  }\r\n\r\n  game$: Observable<Game>;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private gameService: GameService,\r\n    private authenticationService: AuthenticationService,\r\n    private currentUserService: CurrentUserService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.authenticationService.logIn) {\r\n      this.player.userId = parseInt(this.currentUserService.getCurrentUser().id);\r\n      this.player.authorize = true;\r\n    } else {\r\n      this.player.userId = new Date().getMilliseconds();\r\n      this.player.userName = \"Player \" + this.player.userId;\r\n      this.player.authorize = false;\r\n    }\r\n    this.route.params.subscribe(params => {\r\n      this.gameId = +params['gameId'];\r\n      this.connectToGame();\r\n    },\r\n      err => console.log(\"Error loading page: \" + err)\r\n    );\r\n  }\r\n\r\n  connectToGame(): void {\r\n    this.gameService.initializeWebSocketConnection(this.gameId, this.player);\r\n    this.game$ = this.gameService.waitGameStart().pipe(\r\n      map(resp => JSON.parse(resp))\r\n    );\r\n    this.gameService.subscribeQuestion();\r\n    this.gameService.connect();\r\n  }\r\n\r\n  startGame(): void {\r\n    this.gameService.startGame();\r\n  }\r\n\r\n  canDeactivate(): boolean | Observable<boolean> | Promise<boolean> {\r\n    if (window.confirm('Quit this page?')) {\r\n      this.gameService.disconnect();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"(game$|async) as game\">\r\n    <mat-card>\r\n        <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"space-between\" *ngIf=\"game.hostId==player.userId\">\r\n            <h1> Game Start  {{gameId}}</h1>\r\n            <div>\r\n                <button mat-raised-button class=\"start-button\" color=\"accent\" (click)=\"startGame()\">Start\r\n                </button>\r\n            </div>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n            <div class=\"user-list\" fxFlexAlign=\"center\"></div>\r\n            <h2>Connected users</h2>\r\n            <mat-card>\r\n                <mat-list role=\"list\">\r\n                    <mat-list-item role=\"listitem\" *ngFor=\"let player of game.players\">\r\n                        {{player.userName}}\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </mat-card>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","import { FormControl, Validators } from '@angular/forms';\r\nimport { GameAnswerComponent } from './../game-answer/game-answer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n\r\n@Component({\r\n  selector: 'app-game-string-answer',\r\n  templateUrl: './game-string-answer.component.html',\r\n  styleUrls: ['./game-string-answer.component.css']\r\n})\r\nexport class GameStringAnswerComponent extends GameAnswerComponent {\r\n  stringAnswer: FormControl = new FormControl('', Validators.required);\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getSubmittedAnswers(): Answer[] {\r\n    let answer = this.getEmptyAnswer();\r\n\r\n    answer.text = this.stringAnswer.value;\r\n\r\n    return [answer];\r\n  }\r\n}\r\n","<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n    <mat-form-field class=\"answer-input\" appearance=\"outline\">\r\n        <mat-label>Enter your answer</mat-label>\r\n        <input matInput placeholder=\"Answer\" [formControl]=\"stringAnswer\" maxlength=\"30\" required>\r\n        <mat-error *ngIf=\"stringAnswer.invalid && (stringAnswer.dirty|| stringAnswer.touched)\"\r\n            class=\"alert alert-danger\">\r\n            <mat-error *ngIf=\"stringAnswer.errors.required\">\r\n                Answer is required.\r\n            </mat-error>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-image-upload',\r\n  templateUrl: './image-upload.component.html',\r\n  styleUrls: ['./image-upload.component.css']\r\n})\r\nexport class ImageUploadComponent implements OnInit {\r\n  selectedFile: ImageSnippet;\r\n  name: String;\r\n\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n    this.name = \"Choose file\";\r\n  }\r\n\r\n  processFile(imageInput: any) {\r\n    const file: File = imageInput.files[0]\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener('load', (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n      this.name = file.name;\r\n    })\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"image-input\">\r\n    <mat-form-field class=\"image-name\">\r\n        <mat-label #imageLabel class=\"custom-file-label\" for=\"inputGroupFile01\" ng-bind=\"name\">{{name}}</mat-label>\r\n        <input #imageInput style=\"display: none;\" id=\"image\" type=\"file\" accept=\"image/*\" aria-label=\"Select image\"\r\n            (change)=\"processFile(imageInput)\">\r\n        <input matInput disabled>\r\n    </mat-form-field>\r\n    <button mat-raised-button class=\"input-group-text\" id=\"inputGroupFileAddon01\"\r\n        (click)=\"imageInput.click()\">Image</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {User} from \"../models/user\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  model: User = {\r\n    image: undefined, notificationStatus: undefined,\r\n    about: \"\",\r\n    birthdate: undefined,\r\n    city: \"\",\r\n    countryId: \"\",\r\n    gender: undefined,\r\n    name: \"\",\r\n    rating: \"\",\r\n    role: undefined,\r\n    surname: \"\",\r\n    id: null,\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  Login() {\r\n    this.authenticationService.login(this.model.email, this.model.password);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" class>\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && Login()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" matInput\r\n               name=\"login\"\r\n               [(ngModel)]=\"model.email\"\r\n               #email=\"ngModel\"\r\n               [ngClass]=\"{ 'is-invalid': f.submitted && email.invalid }\"/>\r\n        <mat-error *ngIf=\"email.errors?.required\">Email is required</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\" matInput\r\n               name=\"password\"\r\n               [(ngModel)]=\"model.password\">\r\n      </mat-form-field>\r\n      <br>\r\n      <button mat-raised-button type=\"submit\">Submit</button>\r\n    </form>\r\n\r\n    <a routerLink=\"/registration\">Registration<span class=\"sr-only\">(current)</span></a>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n","export enum Gender {\r\n  MALE,\r\n  FEMALE,\r\n  NOT_MENTIONED\r\n}\r\n","export class ModeratorComment {\r\n  quizId: number;\r\n  moderatorId: number;\r\n  comment: string;\r\n  commentDate: Date;\r\n\r\n  constructor(quizId: number, moderatorId: number, comment: string, commentDate: Date) {\r\n    this.quizId = quizId;\r\n    this.comment = comment;\r\n    this.commentDate = commentDate;\r\n    this.moderatorId = moderatorId;\r\n  }\r\n}\r\n","export enum NotificationStatus {\r\n  ON,\r\n  OFF,\r\n  FRIENDS_ONLY,\r\n  SYSTEM_ONLY\r\n}\r\n","import { Answer } from './answer.model';\r\n\r\nexport enum QuestionType {\r\n    OPTION = \"Option\",\r\n    BOOLEAN = \"Boolean\",\r\n    ANSWER = \"Answer\",\r\n    SEQUENCE = \"Sequence\"\r\n}\r\n\r\nexport interface Question {\r\n    id: number,\r\n    quizId: number,\r\n    type: string,\r\n    text: string,\r\n    active: boolean,\r\n    image: string,\r\n    answerList: Answer[],\r\n    changed: boolean,\r\n    deleted: boolean\r\n} ","import { User } from \"./user\";\r\nimport { Category } from \"./category.model\";\r\n\r\n\r\nexport enum StatusType {\r\n  PENDING = \"Pending\",\r\n  ACTIVE = \"Active\",\r\n  DEACTIVATED = \"Deactivated\",\r\n  DELETED = \"Deleted\"\r\n}\r\n\r\nexport interface Quiz {\r\n  id: number;\r\n  name: string;\r\n  author: User;\r\n  category: Category;\r\n  date: string;\r\n  description: string;\r\n  status: StatusType;\r\n  modification_time: string;\r\n}\r\n","export enum Role {\r\n  USER,\r\n  MODERATOR,\r\n  ADMIN,\r\n  SUPER_ADMIN\r\n}\r\n","export enum StatusType {\r\n  PENDING,\r\n  ACTIVE,\r\n  DEACTIVATED,\r\n  DELETED\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../service/loginService/authentication.service';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.css']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  isOpen: boolean = true;\r\n  currentUser: any;\r\n  username: string;\r\n  id: string;\r\n\r\n  constructor(public authService: AuthenticationService,\r\n    private router: Router) {\r\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (this.currentUser != null) {\r\n      this.username = this.currentUser.email;\r\n      this.id = this.currentUser.id;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  toProfile() {\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate(['profile', this.id, { outlets: { profilenav: 'profinfo' } }]);\r\n    });\r\n  }\r\n\r\n  toGame(gameId: number) {\r\n    this.isOpen = true;\r\n    this.router.navigateByUrl(`/game/start/${gameId}`);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row>\r\n\r\n    <a mat-button routerLink=\"/dashboard\">QUIZ</a>\r\n    <a mat-button routerLink=\"/quizzes\">Quizzes</a>\r\n    <span class=\"spacer\"></span>\r\n\r\n    <button mat-stroked-button class=\"connect-button\" *ngIf=\"isOpen\" (click)=\"isOpen=false\">Connect to game</button>\r\n    <mat-form-field appearance=\"outline\" style=\"margin-bottom: -1.25em\" *ngIf=\"!isOpen\">\r\n      <input matInput #gameId type=\"number\" placeholder=\"Game id\" (keydown.enter)=\"toGame(gameId.value)\">\r\n    </mat-form-field>\r\n\r\n    <span class=\"spacer\"></span>\r\n    <a mat-button routerLink=\"/registration\" *ngIf=\"!authService.logIn\">Register</a>\r\n    <a mat-button routerLink=\"/login\" *ngIf=\"!authService.logIn\">Login</a>\r\n    <a mat-button [routerLink]=\"['profile', id, {outlets: {profilenav: 'profinfo'}}]\"\r\n      *ngIf=\"authService.logIn\">{{username}}</a>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item [routerLink]=\"['profile', id, {outlets: {profilenav: 'profinfo'}}]\"\r\n        *ngIf=\"authService.logIn\">\r\n        <mat-icon>assignment_ind</mat-icon>\r\n        <span>Profile</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"authService.logout()\" *ngIf=\"authService.logIn\" routerLink=\"/\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>Logout</span>\r\n      </button>\r\n    </mat-menu>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {ProfileService} from '../../service/profileService/profile.service';\r\nimport {Router} from '@angular/router';\r\nimport {ShareIdService} from '../../service/profileService/share-id.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {RegistrationService} from '../../service/registrationService/registration.service';\r\n\r\nimport {Gender} from '../../models/gender.enum';\r\nimport {NotificationStatus} from '../../models/notification-status.enum';\r\nimport {User} from \"../../models/user\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Role} from \"../../models/role.enum\";\r\n\r\n@Component({\r\n  selector: 'app-admin-users',\r\n  templateUrl: './admin-users.component.html',\r\n  styleUrls: ['./admin-users.component.css']\r\n})\r\nexport class AdminUsersComponent implements OnInit {\r\n  model: User = {\r\n    id: null,\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n    surname: '',\r\n    gender: Gender[Symbol.hasInstance],\r\n    birthdate: new Date(),\r\n    city: '',\r\n    about: '',\r\n    image: '',\r\n    role: Role[Symbol.hasInstance],\r\n    notificationStatus: NotificationStatus[Symbol.hasInstance],\r\n    countryId: null,\r\n    rating: null\r\n  };\r\n  adminUsers: User[];\r\n  displayedColumns: string[] = ['name', 'email', 'role', 'active', 'actions'];\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  public isCollapsed = true;\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  currentUserId: string;\r\n  isAdmin = false;\r\n  isSuperAdmin = false;\r\n  roleUs: Role;\r\n  selectedRole = 'AllRole';\r\n  selectedStatus = 'AllStatus';\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [10, 20, 30, 40, 50];\r\n  currentUserRole = 'AllRole';\r\n  currentUserStatus = 'AllStatus';\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private router: Router,\r\n              private shareId: ShareIdService,\r\n              public regService: RegistrationService,\r\n              private formBuilder: FormBuilder) {\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n    this.roleUs = JSON.parse(localStorage.getItem('currentUser')).role;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.adminCheck();\r\n    this.registerForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      role: ['MODERATOR']\r\n    });\r\n    this.setPaginationParamDefault();\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        this.setPaginationParamDefault();\r\n        userSearch.length ==0 ? this.getAllAdminUsers() : this.filterRequest(userSearch);\r\n      });\r\n    this.searchByRoleStatus(this.currentUserRole, this.currentUserStatus);\r\n  }\r\n  onPageChanged(e) {\r\n    this.pageIndex = e.pageIndex;\r\n    this.pageSize = e.pageSize;\r\n    if (this.currentUserRole != undefined && this.currentUserStatus != undefined) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.searchByRoleStatus(this.currentUserRole, this.currentUserStatus);\r\n    } else if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterRequest(this.userRequest);\r\n    } else {\r\n      this.getAllAdminUsers();\r\n    }\r\n  }\r\n\r\n  searchByRoleStatus(userRole: string, userStatus: string) {\r\n    this.profileService.getUsersByRoleStatus(userRole, userStatus, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.adminUsers = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  filterRequest(filterText: string) {\r\n    this.profileService.getFilteredUsers(filterText, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.adminUsers = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 10;\r\n  }\r\n  setCurrentRole(role: string) {\r\n    this.currentUserRole = role;\r\n  }\r\n  setCurrentStatus(status: string) {\r\n    this.currentUserStatus = status;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    const input: User = JSON.parse(JSON.stringify(this.registerForm.value));\r\n    this.model.email = input.email;\r\n    if (this.roleUs === Role.ADMIN){\r\n      this.model.role = Role.MODERATOR;\r\n    }\r\n    else {\r\n      this.model.role = input.role;\r\n    }\r\n    this.addNewUser();\r\n  }\r\n  addNewUser(): void{\r\n    this.profileService.postRegisterInfo(this.model).subscribe(\r\n      res => {\r\n        alert('Activation code was sent');\r\n      },\r\n      error => {\r\n        alert(error.error.message);\r\n      }\r\n    );\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'adminUsers'}}]);\r\n    });\r\n  }\r\n  adminCheck(){\r\n    if (this.roleUs.toString() === Role[Role.SUPER_ADMIN]){\r\n      this.isSuperAdmin = true;\r\n    }\r\n    if (this.roleUs.toString() === Role[Role.ADMIN]){\r\n      this.isAdmin = true;\r\n    }\r\n  }\r\n  getAllAdminUsers() {\r\n    this.profileService.getAdminUsers(this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.currentUserRole = undefined;\r\n        this.adminUsers = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  checkOut(id: string, email: string) {\r\n    this.shareId.setEmail(email);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  deleteAdminUser(id) {\r\n    this.profileService.deleteAdminUsers(id).subscribe(\r\n      (resp: any) => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'adminUsers'}}]);\r\n        });\r\n      },\r\n      error => {\r\n        alert('Something wrong while deleting user');\r\n      }\r\n    );\r\n  }\r\n  updateActiveStatusUser(id) {\r\n    this.profileService.updateActiveStatusUser(id).subscribe(\r\n      (resp: any) => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'adminUsers'}}]);\r\n        });\r\n      },\r\n      error => {\r\n        alert('Something wrong while change active status');\r\n      }\r\n    );\r\n  }\r\n  get f() { return this.registerForm.controls; }\r\n}\r\n","<div fxLayout=\"column\">\r\n  <mat-accordion *ngIf=\"isAdmin || isSuperAdmin\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header >\r\n        <mat-panel-title *ngIf=\"roleUs.toString() == 'ADMIN'\">\r\n          Add moderator\r\n        </mat-panel-title>\r\n        <mat-panel-title *ngIf=\"roleUs.toString() == 'SUPER_ADMIN'\">\r\n          Add administrative user user\r\n        </mat-panel-title>\r\n        <mat-panel-description *ngIf=\"roleUs.toString() == 'ADMIN'\">\r\n          Enter the data of the new moderator\r\n        </mat-panel-description>\r\n        <mat-panel-description *ngIf=\"roleUs.toString() == 'SUPER_ADMIN'\">\r\n          Enter the data of the new administrative user\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n  <div fxLayout=\"row\" class >\r\n    <div fxFlex=\"30\"></div>\r\n    <div fxFlex=\"center center\">\r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" >\r\n        <mat-form-field class=\"full-width\">\r\n          <mat-label>Email</mat-label>\r\n          <input  matInput formControlName=\"email\"  placeholder=\"Email\" name=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\r\n          <mat-error *ngIf=\"f.email.errors?.required\">Email is required</mat-error>\r\n          <mat-error *ngIf=\"f.email.errors?.email\">Email must be a valid email address</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field *ngIf=\"isSuperAdmin\">\r\n          <mat-label>Choose role</mat-label>\r\n          <mat-select class=\"form-control\" id=\"selectRole\"  formControlName=\"role\">\r\n            <mat-option value=\"ADMIN\">ADMIN</mat-option>\r\n            <mat-option value=\"MODERATOR\" >MODERATOR</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <button mat-raised-button class=\"btn btn-primary\">Add new user</button>\r\n      </form>\r\n    </div>\r\n    <div fxFlex=\"30\"></div>\r\n  </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n<div #maincontent fxFlex=\"71\" class=\"scroll main\">\r\n<div class=\"input\">\r\n  <mat-form-field  appearance=\"outline\">\r\n    <mat-label>Search quiz</mat-label>\r\n    <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n           (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n  </mat-form-field>\r\n  <mat-form-field class=\"role_selection\">\r\n    <mat-label>Select role</mat-label>\r\n    <mat-select [(value)]=\"selectedRole\" disableRipple>\r\n      <mat-option value=\"AllRole\" (click)=\"setPaginationParamDefault(); setCurrentRole('AllRole'); onPageChanged($event);\" >All</mat-option>\r\n      <mat-option value=\"Admins\" (click)=\"setPaginationParamDefault(); setCurrentRole('ADMIN'); onPageChanged($event); \">ADMIN</mat-option>\r\n      <mat-option value=\"Moderators\" (click)=\"setPaginationParamDefault(); setCurrentRole('MODERATOR'); onPageChanged($event); \">MODERATOR</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"status_selection\">\r\n    <mat-label>Select status</mat-label>\r\n    <mat-select [(value)]=\"selectedStatus\" disableRipple>\r\n      <mat-option value=\"AllStatus\" (click)=\"setPaginationParamDefault(); setCurrentStatus('AllStatus'); onPageChanged($event);\" >All</mat-option>\r\n      <mat-option value=\"Active\" (click)=\"setPaginationParamDefault(); setCurrentStatus('ACTIVE'); onPageChanged($event); \">Active</mat-option>\r\n      <mat-option value=\"Deactivated\" (click)=\"setPaginationParamDefault(); setCurrentStatus('DEACTIVATED'); onPageChanged($event); \">Deactivated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"mat-elevation-z8 w-75\">\r\n  <table mat-table [dataSource]=\"adminUsers\" class=\"mat-elevation-z8\" width=\"100%\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name</th>\r\n      <td mat-cell *matCellDef=\"let element\"><a class=\"nav-link\" routerLink=\"\"\r\n                                                (click)=\"checkOut(element.id, element.email)\">\r\n        {{element.name}} {{element.surname}}</a></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell *matHeaderCellDef> Email</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.email}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"role\">\r\n      <th mat-header-cell *matHeaderCellDef> Role</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.role}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"active\">\r\n      <th mat-header-cell *matHeaderCellDef>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <div *ngIf=\"element.active\">Active</div>\r\n        <div *ngIf=\"!element.active\">Deactivated</div>\r\n      </td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th  mat-header-cell  *matHeaderCellDef> Acting</th>\r\n      <td  mat-cell  *matCellDef=\"let row; let element;\">\r\n        <div class=\"buttonsAction\">\r\n          <button mat-stroked-button *ngIf=\"isAdmin && element.active\"  (click)=\"updateActiveStatusUser(element.id)\">Deactive</button>\r\n          <button mat-stroked-button *ngIf=\"isAdmin && !element.active\" (click)=\"updateActiveStatusUser(element.id)\">Active</button>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n  </mat-paginator>\r\n</div>\r\n</div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  public changePasswordForm: FormGroup;\r\n  submitted = false;\r\n  newPassword: string;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private profileService: ProfileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  get f() { return this.changePasswordForm.controls; }\r\n\r\n\r\n  public changingPassFormValidation(){\r\n    this.submitted = true;\r\n\r\n    if (this.changePasswordForm.invalid) {\r\n      return;\r\n    }\r\n    this.newPassword = this.changePasswordForm.value.password;\r\n    this.changePassword();\r\n  }\r\n\r\n  changePassword() {\r\n    this.profileService.updatePassword(this.newPassword).subscribe(\r\n      (resp: any) => {\r\n        alert(\"Password was changed\")\r\n        this.router.navigate(['/'])\r\n      },\r\n      error => {\r\n        alert(\"Something wrong while save password\")\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      return;\r\n    }\r\n\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","<div fxLayout=\"row\" class >\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"changingPassFormValidation()\">\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput formControlName=\"password\"  placeholder=\"Password\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required/>\r\n        <mat-error *ngIf=\"f.password.errors?.required\">Password is require</mat-error>\r\n        <mat-error *ngIf=\"f.password.errors?.pattern\">Must contain at least 8 or more characters</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Confirm password</mat-label>\r\n        <input type=\"password\"  matInput  placeholder=\"Password\" formControlName=\"confirmPassword\"  name=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.required\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.mustMatch\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\">Change password</button>\r\n\r\n    </form>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Quiz} from \"../../models/quiz\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'app-favorite',\r\n  templateUrl: './favorite.component.html',\r\n  styleUrls: ['./favorite.component.css']\r\n})\r\nexport class FavoriteComponent implements OnInit {\r\n  constructor(private profileService: ProfileService) { }\r\n  quizzes:Quiz[];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [6, 12, 18];\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n    this.uploadFavoriteQuizzes();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.uploadFavoriteQuizzes()\r\n        } else {\r\n          this.filterFavoriteQuizzes(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  uploadFavoriteQuizzes(){\r\n    this.profileService.getFavoriteGames(this.pageSize, this.pageIndex).subscribe(\r\n      resp=>{\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 6;\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterFavoriteQuizzes(userSearch: string){\r\n    this.profileService.filterFavoriteRequest(userSearch, this.pageSize, this.pageIndex).subscribe(\r\n      resp=>{\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  choseRequest(){\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterFavoriteQuizzes(this.userRequest);\r\n    } else {\r\n      this.uploadFavoriteQuizzes();\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search quiz</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n<div  #maincontent fxLayout=\"row wrap\">\r\n  <div *ngFor=\"let quiz of quizzes\" fxLayout=\"row wrap\">\r\n    <app-quiz [quizData]=\"quiz\">\r\n    </app-quiz>\r\n  </div>\r\n\r\n</div>\r\n<mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n               (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n</mat-paginator>\r\n","import {ProfileService} from '../../service/profileService/profile.service';\r\nimport {ShareIdService} from '../../service/profileService/share-id.service';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {User} from \"../../models/user\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n  friends: User[];\r\n  displayedColumns: string[] = ['name', 'rating', 'actions'];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  sortDirection = undefined;\r\n\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [9, 18, 27];\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private router: Router,\r\n              private shareId: ShareIdService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n\r\n    this.uploadFriends();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.uploadFriends()\r\n        } else {\r\n          this.filterFriends(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  checkOut(id: string, email: string) {\r\n    this.shareId.setEmail(email);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 9;\r\n  }\r\n\r\n  uploadFriends(){\r\n    this.profileService.getFriends(this.pageSize, this.pageIndex, this.sortDirection).subscribe(resp => {\r\n      this.friends = resp.responceList;\r\n      this.length = resp.totalNumberOfElement;\r\n    });\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterFriends(userSearch: string) {\r\n    this.profileService.filterFriendsRequest(userSearch, this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp => {\r\n        this.friends = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  sortFriends($event) {\r\n    this.sortDirection = $event.direction==''? undefined : $event;\r\n    this.setPaginationParamDefault();\r\n    this.choseRequest();\r\n  }\r\n\r\n  choseRequest(){\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterFriends(this.userRequest);\r\n    } else {\r\n      this.uploadFriends();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search friend</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n<div id=\"table\" class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"friends\" class=\"mat-elevation-z8\" matSort (matSortChange) = \"sortFriends($event)\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\" ><a routerLink=\"\"\r\n                                                (click)=\"checkOut(element.id, element.email)\">\r\n        {{element.name}} {{element.surname}}</a></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"rating\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Rating</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.rating}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\r\n      <td mat-cell  *matCellDef>\r\n        <button mat-icon-button>\r\n          <mat-icon>chat</mat-icon>\r\n        </button>\r\n        <button mat-icon-button>\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event)\">\r\n  </mat-paginator>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {DomSanitizer, SafeResourceUrl} from \"@angular/platform-browser\";\r\nimport {NotificationStatus} from \"../../models/notification-status.enum\";\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\n\r\n@Component({\r\n  selector: 'app-left-bar',\r\n  templateUrl: './left-bar.component.html',\r\n  styleUrls: ['./left-bar.component.css']\r\n})\r\nexport class LeftBarComponent implements OnInit {\r\n  username = JSON.parse(localStorage.getItem('currentUser')).email;\r\n  currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n  notificationStatus: NotificationStatus;\r\n  progressImage: any;\r\n  imageUrl: string;\r\n  id: string;\r\n  constructor(private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer,\r\n              private shareId: ShareIdService) {\r\n    this.id = shareId.shareId();\r\n\r\n    if (shareId.shareEmail() != undefined){\r\n      this.username = shareId.shareEmail();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadFile();\r\n    this.getNotification();\r\n  }\r\n\r\n  fileProgress(imageInput: any){\r\n    this.progressImage = <File>imageInput.target.files[0];\r\n    this.changeImg();\r\n  }\r\n\r\n  changeImg() {\r\n    this.profileService.updateImage(this.progressImage).subscribe(\r\n      resp => {\r\n        this.uploadFile();\r\n        alert(\"Icon was changed\")\r\n      },\r\n      error => {\r\n        alert(\"Error while updating icon\")\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile(){\r\n    this.profileService.getProfileImage(this.id).subscribe(\r\n      resp => {\r\n        this.imageUrl = resp.text;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  change(){\r\n    this.profileService.updateNotificationStatus(this.notificationStatus).subscribe(\r\n      resp =>{\r\n        alert(\"Notification status was changed\")\r\n      },\r\n      error => {\r\n        alert(\"Error while change notification status\")\r\n      }\r\n    );\r\n  }\r\n\r\n  getNotification() {\r\n    this.profileService.getUserNotificationStatus().subscribe(\r\n      resp =>{\r\n        this.notificationStatus = resp;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card class=\"card\" >\r\n\r\n  <img mat-card-image [src]=\"imageUrl\" height=\"250\" width=\"250\">\r\n  <br>\r\n  <div fxLayout=\"column\">\r\n    <div fxLayoutAlign=\"end\">\r\n      <button mat-icon-button id=\"changeImg\" (click)=\"image.click()\" *ngIf=\"currentUserId==id\"  >\r\n        <input style=\"display: none\" type=\"file\" accept=\"image/*\" (change)=\"fileProgress($event)\" #image>\r\n        <mat-icon>cloud_upload</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n  <mat-card-content fxLayoutAlign=\"center\">\r\n    <p>{{username}}</p>\r\n\r\n  </mat-card-content >\r\n  <mat-card-actions fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"currentUserId==id\">\r\n    <button mat-raised-button [routerLink]=\"[{outlets: {profilenav: 'changePass'}}]\" >Change password</button>\r\n    <br>\r\n\r\n\r\n<!--    <mat-form-field>\r\n      <mat-label>Notification status</mat-label>\r\n      <mat-select [(value)]=\"notificationStatus\">\r\n        <mat-option value=\"ON\" (click)=\"change()\">ON</mat-option>\r\n        <mat-option value=\"OFF\" (click)=\"change()\">OFF</mat-option>\r\n        <mat-option value=\"FRIENDS_ONLY\" (click)=\"change()\">FRIENDS_ONLY</mat-option>\r\n        <mat-option value=\"SYSTEM_ONLY\" (click)=\"change()\">SYSTEM_ONLY</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>-->\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ProfileService} from '../../service/profileService/profile.service';\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {Quiz} from \"../../models/quiz\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {RejectMessagesDialogComponent} from \"./reject-messages-dialog/reject-messages-dialog.component\";\r\nimport { NewQuizService } from 'src/app/service/newQuizService/new-quiz.service';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-quizzes',\r\n  templateUrl: './my-quizzes.component.html',\r\n  styleUrls: ['./my-quizzes.component.css']\r\n})\r\nexport class MyQuizzesComponent implements OnInit {\r\n  userQuizzes: Quiz[];\r\n  displayedColumns: string[] = ['name', 'category', 'status', 'actions'];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  sortDirection = undefined;\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [8, 16, 24];\r\n\r\n  rejectedQuizzes: Quiz[];\r\n  rejectedSortDirection = undefined;\r\n  rejectedLength = 0;\r\n  rejectedPageIndex: number;\r\n  rejectedPageSize: number;\r\n  rejectedPageSizeOptions: number[] = [8, 16, 24];\r\n\r\n\r\n  constructor(private profileService: ProfileService,\r\n              public dialog: MatDialog,\r\n              private quizService: NewQuizService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n    this.getUserQuizzes();\r\n\r\n    this.setPaginationRejectedParamDefault();\r\n    this.getUserRejectedQuizzes();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.getUserQuizzes();\r\n        } else {\r\n          this.filterQuizzes(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  getUserQuizzes() {\r\n    this.profileService.getUserQuizzes(this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp => {\r\n        this.userQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      });\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 8;\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  filterQuizzes(userSearch: string) {\r\n    this.profileService.filterQuizzesRequest(userSearch, this.pageSize, this.pageIndex, this.sortDirection).subscribe(\r\n      resp => {\r\n        this.userQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  choseRequest() {\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterQuizzes(this.userRequest);\r\n    } else {\r\n      this.getUserQuizzes();\r\n    }\r\n  }\r\n\r\n  sortQuizzes($event) {\r\n    this.sortDirection = $event.direction == '' ? undefined : $event;\r\n    this.setPaginationParamDefault();\r\n    this.choseRequest();\r\n  }\r\n\r\n  getUserRejectedQuizzes() {\r\n    this.profileService.getRejectedQuizzes(this.rejectedPageSize, this.rejectedPageIndex, this.rejectedSortDirection).subscribe(\r\n      resp => {\r\n        this.rejectedQuizzes = resp.responceList;\r\n        this.rejectedLength = resp.totalNumberOfElement;\r\n      });\r\n  }\r\n\r\n  setPaginationRejectedParamDefault() {\r\n    this.rejectedPageIndex = 0;\r\n    this.rejectedPageSize = 8;\r\n  }\r\n\r\n  onPageRejectedChanged($event: PageEvent) {\r\n    this.rejectedPageIndex = $event.pageIndex;\r\n    this.rejectedPageSize = $event.pageSize;\r\n    this.choseRejectedRequest();\r\n  }\r\n\r\n  choseRejectedRequest() {\r\n      if (this.rejectedPageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.getUserRejectedQuizzes();\r\n  }\r\n\r\n  sortRejectedQuizzes($event) {\r\n    this.rejectedSortDirection = $event.direction == '' ? undefined : $event;\r\n    this.setPaginationRejectedParamDefault();\r\n    this.choseRejectedRequest();\r\n  }\r\n\r\n  openDialog(id: number) {\r\n    this.dialog.open(RejectMessagesDialogComponent, {\r\n      data: id\r\n    });\r\n  }\r\n\r\n  editQuiz(quiz: Quiz) {\r\n    this.quizService.getQuizInfo(quiz.id).subscribe(\r\n      resp => this.router.navigateByUrl('/new_quiz', {\r\n        state: {\r\n          quiz: resp\r\n        }\r\n      }),\r\n      err => {\r\n        console.log(err);\r\n        alert(err.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  onStartClick(id: string): void {\r\n    this.router.navigate(['/game/settings', id]);\r\n  }\r\n}\r\n","<div id=\"add-quiz-button\">\r\n  <button mat-raised-button routerLink=\"/new_quiz\">Create quiz</button>\r\n</div>\r\n<br>\r\n<mat-accordion id=\"rejected\">\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title fxLayoutAlign=\"center\">\r\n        <p>Rejected quiz</p>\r\n        <p>\r\n          <span matBadge=\"{{rejectedLength}}\" matBadgeOverlap=\"false\" matBadgePosition=\"above\"></span>\r\n        </p>\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n\r\n    <div class=\"table2\" class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"rejectedQuizzes\" class=\"mat-elevation-z8\" matSort\r\n             (matSortChange)=\"sortRejectedQuizzes($event)\">\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">{{element.name}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"category\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">{{element.category}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef>Status</th>\r\n          <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">Rejected</td>\r\n        </ng-container>\r\n\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th id=\"actions2\" mat-header-cell *matHeaderCellDef> Acting</th>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <button mat-icon-button (click)=\"editQuiz(row)\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row class=\"reject\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <mat-paginator [pageIndex]=\"rejectedPageIndex\" [length]=\"rejectedLength\" [pageSize]=\"rejectedPageSize\"\r\n                     [pageSizeOptions]=\"rejectedPageSizeOptions\"\r\n                     (page)=\"onPageRejectedChanged($event)\"></mat-paginator>\r\n    </div>\r\n\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n<mat-form-field class=\"input-form\">\r\n  <mat-label>Search quiz</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n\r\n<br>\r\n\r\n<div id=\"table\" class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"userQuizzes\" class=\"mat-elevation-z8\" matSort (matSortChange)=\"sortQuizzes($event)\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.status}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"actions\">\r\n      <th id=\"actions\" mat-header-cell *matHeaderCellDef>Acting</th>\r\n      <mat-cell *matCellDef=\"let row\" fxLayoutAlign=\"center\">\r\n        <button mat-icon-button (click)=\"onStartClick(row.id)\">\r\n          <mat-icon>play_arrow</mat-icon>\r\n        </button>\r\n      </mat-cell>\r\n\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event)\"></mat-paginator>\r\n</div>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {ProfileService} from \"../../../service/profileService/profile.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {PlayedGameComponent} from \"../../played-game/played-game.component\";\nimport {RejectMessage} from \"../../../models/reject-message\";\n\n@Component({\n  selector: 'app-reject-messages-dialog',\n  templateUrl: './reject-messages-dialog.component.html',\n  styleUrls: ['./reject-messages-dialog.component.css']\n})\nexport class RejectMessagesDialogComponent implements OnInit {\n  messages: RejectMessage[];\n  constructor(private profileService: ProfileService,\n              public dialogRef: MatDialogRef<PlayedGameComponent>,\n              @Inject(MAT_DIALOG_DATA) public quizId: number) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.profileService.getRejectMessages(this.quizId).subscribe(\n      resp =>{\n        this.messages = resp;\n      console.log(resp);}\n    );\n  }\n\n}\n","<div class=\"card\" *ngFor=\"let mess of messages\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>{{mess.date | date:'shortTime'}}</mat-card-title>\n      <mat-card-subtitle>{{mess.date | date}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <p>\n        {{mess.comment}}\n      </p>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {Router} from '@angular/router';\r\nimport {Quiz} from '../../models/pending-quizzes.model';\r\nimport {PendingQuizzesService} from '../../service/pendingQuizzesService/pending-quizzes.service';\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\nimport {QuizCheckService} from \"../../service/quizCheckService/quiz-check.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-not-checked-quizzes',\r\n  templateUrl: './pending-quizzes.component.html',\r\n  styleUrls: ['./pending-quizzes.component.css']\r\n})\r\nexport class PendingQuizzesComponent implements OnInit {\r\n  pendingQuizzes: Quiz[];\r\n  displayedColumns: string[] = ['name', 'category', 'date', 'authorEmail', 'actions'];\r\n  dataSource: MatTableDataSource<Quiz>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  currentUserId: number;\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [10, 20, 30, 40, 50];\r\n  selected = 'Pending';\r\n  currentTable: string;\r\n\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  constructor(private quizService: PendingQuizzesService,\r\n              private router: Router,\r\n              private shareId: ShareIdService,\r\n              private quizCheckService: QuizCheckService) {\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n    this.setCurrentTable('Pending');\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        this.setPaginationParamDefault();\r\n        userSearch.length ==0 ? this.getAllPendingQuizzes() : this.filterRequest(userSearch);\r\n      });\r\n    this.getAllPendingQuizzes();\r\n  }\r\n\r\n  onPageChanged(e) {\r\n    this.pageIndex = e.pageIndex;\r\n    this.pageSize = e.pageSize;\r\n    if (this.currentTable != 'Pending' && this.currentTable != null) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.getAssignedQuizzes();\r\n    } else if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterRequest(this.userRequest);\r\n    } else {\r\n      this.getAllPendingQuizzes();\r\n    }\r\n  }\r\n\r\n  filterRequest(filterText: string) {\r\n    this.quizService.getFilteredPendingQuizzes(filterText, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.pendingQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 10;\r\n  }\r\n  getAllPendingQuizzes(){\r\n      this.quizService.getPendingQuizzes(this.pageSize, this.pageIndex).subscribe(resp => {\r\n        this.pendingQuizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n    });\r\n  }\r\n\r\n  getAssignedQuizzes(){\r\n    this.quizService.getAssignedQuizzes(this.currentUserId, this.pageSize, this.pageIndex).subscribe(resp => {\r\n      this.pendingQuizzes = resp.responceList;\r\n      this.length = resp.totalNumberOfElement;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  checkOut(id: string, email: string) {\r\n    this.shareId.setEmail(email);\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n\r\n  checkQuiz(quiz: Quiz) {\r\n    if (this.currentTable === 'Pending') {\r\n      this.quizCheckService.assignQuiz(quiz.id, JSON.parse(localStorage.getItem('currentUser')).id).subscribe\r\n      ((resp: any) => {\r\n          this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n            this.router.navigate(['checkquiz', quiz.id, {outlets: {quiznav: 'quizinfo'}}]);\r\n          });\r\n          localStorage.setItem('currentQuiz', JSON.stringify(quiz));\r\n        },\r\n        error => {\r\n          alert('Something wrong while assigning quiz');\r\n        }\r\n      );\r\n    }\r\n    else{\r\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n        this.router.navigate(['checkquiz', quiz.id, {outlets: {quiznav: 'quizinfo'}}]);\r\n      });\r\n      localStorage.setItem('currentQuiz', JSON.stringify(quiz));\r\n    }\r\n  }\r\n\r\n  setCurrentTable(type: string) {\r\n    this.currentTable = type;\r\n  }\r\n}\r\n","<div fxLayout=\"column\">\r\n<div #maincontent fxFlex=\"71\" class=\"scroll main\">\r\n<div class=\"input\">\r\n  <mat-form-field  appearance=\"outline\">\r\n    <mat-label>Search quiz</mat-label>\r\n    <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n           (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n  </mat-form-field>\r\n<mat-form-field class=\"quiz_selection\">\r\n  <mat-label>Select</mat-label>\r\n  <mat-select [(value)]=\"selected\"  disableRipple>\r\n    <mat-option value=\"Pending\" (click)=\"setPaginationParamDefault(); setCurrentTable('Pending'); getAllPendingQuizzes()\" >Assignments</mat-option>\r\n    <mat-option value=\"Assigned\" (click)=\"setPaginationParamDefault(); setCurrentTable('Assigned'); getAssignedQuizzes()\">My Assignments</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n</div>\r\n<div class=\"mat-elevation-z8 w-75\">\r\n  <table mat-table [dataSource]=\"pendingQuizzes\" class=\"mat-elevation-z8\" width=\"100%\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef> Category</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.category}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.date | date}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"authorEmail\">\r\n      <th mat-header-cell *matHeaderCellDef> Author Name</th>\r\n      <td mat-cell *matCellDef=\"let element\"><a class=\"nav-link\" routerLink=\"\"\r\n                                                (click)=\"checkOut(element.author, element.authorEmail)\">\r\n        {{element.authorName}} {{element.authorSurname}}</a></td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container  matColumnDef=\"actions\">\r\n      <th  mat-header-cell *matHeaderCellDef> Acting</th>\r\n      <mat-cell  *matCellDef=\"let row; let element;\">\r\n        <button  class=\"buttonsAction\" mat-stroked-button *ngIf=\"currentTable=='Pending'\" (click)=\"checkQuiz(element)\">Сheck</button>\r\n        <button  class=\"buttonsAction\" mat-stroked-button *ngIf=\"currentTable=='Assigned'\" (click)=\"checkQuiz(element)\">Continue</button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n  </mat-paginator>\r\n</div>\r\n</div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {PlayedGameComponent} from \"../played-game.component\";\r\nimport {ProfileService} from \"../../../service/profileService/profile.service\";\r\nimport {Player} from \"../../../models/game.model\";\r\n\r\n@Component({\r\n  selector: 'app-game-result-dialog',\r\n  templateUrl: './game-result-dialog.component.html',\r\n  styleUrls: ['./game-result-dialog.component.css']\r\n})\r\nexport class GameResultDialogComponent implements OnInit {\r\n  players: Player[];\r\n  constructor(private profileService: ProfileService,\r\n    public dialogRef: MatDialogRef<PlayedGameComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public gameId: number) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.profileService.getGamesResult(this.gameId).subscribe(\r\n      resp =>\r\n        this.players = resp\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<h1 mat-dialog-title>\r\n  Game result\r\n</h1>\r\n<div mat-dialog-content>\r\n  <mat-list role=\"list\" *ngFor=\"let player of players; let indexOfelement=index;\">\r\n    <mat-list-item role=\"listitem\">{{indexOfelement+1}} {{player.userName}}  {{player.userScore}}</mat-list-item>\r\n\r\n  </mat-list>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\nimport {ProfileService} from \"../../service/profileService/profile.service\";\r\nimport {GameDto} from \"../../models/game-dto\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {GameResultDialogComponent} from \"./game-result-dialog/game-result-dialog.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-played-game',\r\n  templateUrl: './played-game.component.html',\r\n  styleUrls: ['./played-game.component.css']\r\n})\r\nexport class PlayedGameComponent implements OnInit {\r\n  playedGame: GameDto[];\r\n  displayedColumns: string[] = ['name', 'date', 'score'];\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n  sortDirection = undefined;\r\n\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [9, 18, 27];\r\n\r\n  constructor(private profileService: ProfileService,\r\n              public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setPaginationParamDefault();\r\n\r\n    this.uploadPlayedGames();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        if (userSearch.length == 0) {\r\n          this.setPaginationParamDefault();\r\n          this.uploadPlayedGames()\r\n        } else {\r\n          userSearch.length ==0 ? this.uploadPlayedGames() : this.uploadPlayedGames(userSearch);\r\n        }\r\n      });\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 9;\r\n  }\r\n\r\n  uploadPlayedGames(userSearch?: string){\r\n    this.profileService.getPlayedGames(this.pageSize, this.pageIndex, this.sortDirection, userSearch).subscribe(resp => {\r\n      this.playedGame = resp.responceList;\r\n      this.length = resp.totalNumberOfElement;\r\n    });\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    this.pageIndex = $event.pageIndex;\r\n    this.pageSize = $event.pageSize;\r\n    this.choseRequest();\r\n  }\r\n\r\n  choseRequest() {\r\n    if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.uploadPlayedGames(this.userRequest);\r\n    }else {\r\n      this.uploadPlayedGames();\r\n    }\r\n  }\r\n\r\n  sortPlayedGames($event) {\r\n    this.sortDirection = $event.direction==''? undefined : $event;\r\n    this.setPaginationParamDefault();\r\n    this.choseRequest();\r\n  }\r\n\r\n  openDialog(id: number) {\r\n    this.dialog.open(GameResultDialogComponent, {\r\n      data: id\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"input-form\">\r\n  <mat-label>Search game</mat-label>\r\n  <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n         (ngModelChange)=\"this.userQuestionUpdate.next($event)\">\r\n</mat-form-field>\r\n\r\n<br>\r\n<div id=\"table\" class=\"mat-elevation-z8\">\r\n  <table mat-table  [dataSource]=\"playedGame\" matSort class=\"mat-elevation-z8\" (matSortChange) = \"sortPlayedGames($event)\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">{{element.quizName}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">{{element.date | date}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"score\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Score</th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"openDialog(element.id)\">{{element.personalScore}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                 (page)=\"onPageChanged($event)\"></mat-paginator>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\nimport {Role} from '../../models/role.enum';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile-navigation',\r\n  templateUrl: './profile-navigation.component.html',\r\n  styleUrls: ['./profile-navigation.component.css']\r\n})\r\nexport class ProfileNavigationComponent implements OnInit {\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  roleUs: Role;\r\n  public isAdmin = false;\r\n  id: any;\r\n\r\n  constructor(private shareId: ShareIdService) {\r\n    this.id = shareId.shareId();\r\n    this.roleUs = JSON.parse(localStorage.getItem('currentUser')).role;\r\n  }\r\n  adminCheck(){\r\n    if (this.roleUs.toString() !== Role[Role.USER]){\r\n      this.isAdmin = true;\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.id = this.shareId.shareId();\r\n    this.adminCheck();\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar *ngIf=\"currentUser.id == id\">\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {profilenav: 'profinfo'}}]\"\r\n     routerLinkActive #myProfile=\"routerLinkActive\" [active]=\"myProfile.isActive\">My Profile</a>\r\n  <a mat-tab-link *ngIf=\"!isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'friends'}}]\"\r\n     routerLinkActive #myFriends=\"routerLinkActive\" [active]=\"myFriends.isActive\">My friends</a>\r\n  <a mat-tab-link *ngIf=\"!isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'mygames'}}]\"\r\n     routerLinkActive #myQuizzes=\"routerLinkActive\" [active]=\"myQuizzes.isActive\">My Quizzes</a>\r\n  <a mat-tab-link *ngIf=\"!isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'favorite'}}]\"\r\n     routerLinkActive #favorite=\"routerLinkActive\" [active]=\"favorite.isActive\">Favorite</a>\r\n  <a mat-tab-link *ngIf=\"!isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'played'}}]\"\r\n     routerLinkActive #games=\"routerLinkActive\" [active]=\"games.isActive\">Played games</a>\r\n  <a mat-tab-link *ngIf=\"isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'pendingQuizzes'}}]\"\r\n     routerLinkActive #quizzes=\"routerLinkActive\" [active]=\"quizzes.isActive\">Quizzes</a>\r\n  <a mat-tab-link *ngIf=\"isAdmin\" [routerLink]=\"[{outlets: {profilenav: 'adminUsers'}}]\"\r\n     routerLinkActive #admins=\"routerLinkActive\" [active]=\"admins.isActive\">Admin users</a>\r\n</nav>\r\n\r\n","import {Component, Input, OnInit, Output} from '@angular/core';\r\nimport {ActivatedRoute, Router, RoutesRecognized} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {ShareIdService} from '../service/profileService/share-id.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  private subscription: Subscription;\r\n  id: string;\r\n  constructor(private activateRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private shareId: ShareIdService) {\r\n    this.subscription = this.activateRoute.params.subscribe(\r\n      params => {\r\n        this.id = params.id;\r\n      }\r\n    );\r\n    this.shareId.setId(this.id);\r\n    // this.router.navigate([{outlets: {profilenav: 'profinfo'}}]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\" >\r\n  <div id=\"leftbar\" fxFlex=\"20\">\r\n    <app-left-bar></app-left-bar>\r\n  </div>\r\n  <div fxFlex=\"50\">\r\n    <div id=\"navigation\">\r\n      <app-profile-navigation ></app-profile-navigation>\r\n    </div>\r\n\r\n    <router-outlet name=\"profilenav\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { User } from \"../../models/user\";\r\nimport { ProfileService } from \"../../service/profileService/profile.service\";\r\nimport { ShareIdService } from \"../../service/profileService/share-id.service\";\r\nimport { PlatformLocation } from \"@angular/common\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport {Role} from '../../models/role.enum';\r\nimport {QuizCheckService} from \"../../service/quizCheckService/quiz-check.service\";\r\nimport {Quiz} from \"../../models/pending-quizzes.model\";\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\nimport {QuizService} from \"../../service/quizService/quiz.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-information',\r\n  templateUrl: './user-information.component.html',\r\n  styleUrls: ['./user-information.component.css']\r\n})\r\n\r\nexport class UserInformationComponent implements OnInit {\r\n  floatLabelControl = new FormControl('auto');\r\n  public profile: User;\r\n  public isEditForm = false;\r\n  currentUserId: string;\r\n  id: string;\r\n  roleUs: Role;\r\n  public isAdmin = false;\r\n  public isModerator = false;\r\n  public isSuperAdmin = false;\r\n  public isUser = false;\r\n  assignedQuizzes: Quiz[];\r\n  displayedColumns: string[] = ['name', 'category', 'date', 'actions'];\r\n  dataSource: MatTableDataSource<Quiz>;\r\n\r\n  constructor(private profileService: ProfileService,\r\n              private shareId: ShareIdService,\r\n              private location: PlatformLocation,\r\n              private router: Router,\r\n              private quizCheckService: QuizCheckService,\r\n              private quizService: QuizService) {\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n    this.id = shareId.shareId();\r\n    this.shareId.setEmail(JSON.parse(localStorage.getItem('currentUser')).email);\r\n    this.roleUs = JSON.parse(localStorage.getItem('currentUser')).role;\r\n\r\n  }\r\n\r\n  adminCheck() {\r\n    switch (this.roleUs.toString()) {\r\n      case Role[Role.ADMIN]:\r\n        this.isAdmin = true;\r\n        break;\r\n      case Role[Role.MODERATOR]:\r\n        this.isModerator = true;\r\n        break;\r\n      case Role[Role.SUPER_ADMIN]:\r\n        this.isSuperAdmin = true;\r\n        break;\r\n      default:\r\n        this.isUser = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile(this.id);\r\n    this.adminCheck();\r\n    this.location.onPopState(() => {\r\n      this.shareId.setId(this.currentUserId);\r\n      this.shareId.setEmail(JSON.parse(localStorage.getItem('currentUser')).email);\r\n\r\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n        this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'profinfo'}}]);\r\n      });\r\n    });\r\n    this.getAssignedQuizzes();\r\n  }\r\n\r\n  closeEditForm() {\r\n    this.isEditForm = false;\r\n  }\r\n\r\n  ngSubmit() {\r\n    if (this.id === this.currentUserId) {\r\n      this.saveProfile();\r\n    } else {\r\n      this.updateAdminUser();\r\n    }\r\n    this.closeEditForm();\r\n  }\r\n\r\n  public getProfile(id: string) {\r\n    this.profileService.getProfile(id).subscribe(\r\n      (resp: any) => {\r\n        this.adminCheck();\r\n        this.profile = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Something wrong with downloading profile');\r\n      }\r\n    );\r\n  }\r\n\r\n  updateAdminUser() {\r\n    this.profile.id = this.id;\r\n    this.profileService.updateAdminUser(this.profile).subscribe(\r\n      (resp: any) => {\r\n        this.profile = resp;\r\n      },\r\n      error => {\r\n        alert('Something wrong while updating profile');\r\n      }\r\n    );\r\n  }\r\n\r\n  saveProfile() {\r\n    this.profileService.updateProfile(this.profile).subscribe(\r\n      (resp: any) => {\r\n        this.profile = resp;\r\n      },\r\n      error => {\r\n        alert('Something wrong while updating profile');\r\n      }\r\n    );\r\n  }\r\n\r\n  getAssignedQuizzes() {\r\n    this.profileService.getAssignedQuizzes(this.id).subscribe(resp => {\r\n      this.assignedQuizzes = resp;\r\n    });\r\n  }\r\n  unsignModeratorQuiz(id) {\r\n    this.quizCheckService.unsignQuiz(id).subscribe(\r\n      (resp: any) => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['profile', this.id, {outlets: {profilenav: 'profinfo'}}]);\r\n        });\r\n      },\r\n      error => {\r\n        alert('Something wrong while unsign');\r\n      }\r\n    );\r\n  }\r\n  unsignAllModeratorQuiz(id) {\r\n      this.quizService.unsignAllQuiz(id).subscribe(\r\n        (resp: any) => {\r\n          this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n            this.router.navigate(['profile', this.id, {outlets: {profilenav: 'profinfo'}}]);\r\n          });\r\n        },\r\n        error => {\r\n          alert('Something wrong while unsign');\r\n        }\r\n      );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","<div *ngIf=\"profile\">\r\n<div *ngIf=\"!isEditForm\">\r\n  <span>\r\n    <p>Name: {{profile?.name}}</p>\r\n  </span>\r\n  <p>Surname: {{profile?.surname}}</p>\r\n  <p>Gender: {{profile?.gender}}</p>\r\n  <p>Birthdate: {{profile?.birthdate | date}}</p>\r\n  <p>City: {{profile?.city}}</p>\r\n  <p>About me: {{profile?.about}}</p>\r\n  <p *ngIf=\"!isUser\">Role: {{profile?.role}} </p>\r\n  <div (click)=\"isEditForm=true\">\r\n    <div>\r\n      <button mat-raised-button *ngIf=\"id==currentUserId\">Edit profile</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf=\"isEditForm\">\r\n  <form (ngSubmit)=\"ngSubmit()\">\r\n    <div>\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Name</mat-label>\r\n        <input name=\"name\" matInput placeholder=\"Name\" [(ngModel)]=\"profile.name\" />\r\n      </mat-form-field>\r\n      <br>\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Surname</mat-label>\r\n        <input name=\"surname\" matInput placeholder=\"Name\" [(ngModel)]=\"profile.surname\" />\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-radio-group [(ngModel)]=\"profile.gender\" [formControl]=\"floatLabelControl\">\r\n        <mat-label>Gender</mat-label>\r\n        <br>\r\n        <br>\r\n        <mat-radio-button value=\"MALE\">Male</mat-radio-button>\r\n        <mat-radio-button value=\"FEMALE\">Female</mat-radio-button>\r\n        <mat-radio-button value=\"NOT_MENTIONED\">Not mentioned</mat-radio-button>\r\n      </mat-radio-group>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Birtdate</mat-label>\r\n        <input type=\"date\" name=\"birthdate\" matInput placeholder=\"Birthdate\" [(ngModel)]=\"profile.birthdate\" />\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>City</mat-label>\r\n        <input name=\"city\" matInput placeholder=\"City\" [(ngModel)]=\"profile.city\" />\r\n      </mat-form-field>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"width-45\">\r\n        <mat-label>Textarea</mat-label>\r\n        <textarea matInput name=\"about\" placeholder=\"About\" [(ngModel)]=\"profile.about\"></textarea>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\" class=\"width-45\">Submit</button>\r\n\r\n    </div>\r\n  </form>\r\n  <br>\r\n  <button mat-raised-button (click)=\"closeEditForm()\" class=\"width-45\">Cancel</button>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8 w-75\" *ngIf=\"profile.role.toString() == 'MODERATOR' && assignedQuizzes!=null\">\r\n  <h2 align=\"center\">Moderator`s assignments</h2>\r\n  <table mat-table [dataSource]=\"assignedQuizzes\" class=\"mat-elevation-z8\" width=\"100%\">\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th mat-header-cell *matHeaderCellDef> Category</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.category}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"date\">\r\n      <th mat-header-cell *matHeaderCellDef> Date</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.date | date}}</td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container  matColumnDef=\"actions\">\r\n      <th  mat-header-cell *matHeaderCellDef> Acting</th>\r\n      <mat-cell  *matCellDef=\"let row; let element;\">\r\n        <button  class=\"buttonsAction\" mat-stroked-button (click)=\"unsignModeratorQuiz(element.id)\">Unasign</button>\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <button  class=\"buttonsAction\" mat-stroked-button (click)=\"unsignAllModeratorQuiz(profile.id)\">Unsign All</button>\r\n</div>\r\n</div>\r\n\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { NewQuizService } from './../../service/newQuizService/new-quiz.service';\r\nimport { QuestionComponent } from '../question/question.component';\r\nimport { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Question, QuestionType } from '../../models/question.model';\r\nimport { Quiz } from '../../models/add-quiz.model';\r\nimport { mergeMap, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-add-questions',\r\n  templateUrl: './add-questions.component.html',\r\n  styleUrls: ['./add-questions.component.css']\r\n})\r\nexport class AddQuestionsComponent implements OnInit {\r\n  @ViewChildren(QuestionComponent) questionComponents!: QueryList<QuestionComponent>;\r\n\r\n  quiz: Quiz;\r\n  image: File;\r\n  questions: Question[] = [];\r\n\r\n  constructor(private router: Router,\r\n    private newQuizService: NewQuizService,\r\n    private imageService: ImageService) {\r\n    this.quiz = this.router.getCurrentNavigation().extras.state.quiz;\r\n    this.image = this.router.getCurrentNavigation().extras.state.image;\r\n    this.questions = this.quiz.questions;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addQuestion() {\r\n    this.questions.push({\r\n      id: null,\r\n      quizId: null,\r\n      type: \"Option\",\r\n      text: '',\r\n      active: true,\r\n      answerList: null,\r\n      image: null,\r\n      changed: true,\r\n      deleted: false\r\n    });\r\n  }\r\n\r\n  removeQuestion(i: number) {\r\n    if (this.questions.filter(item => !item.deleted).length > 1) {\r\n      if (this.questions[i].id != null) {\r\n        this.questions[i].deleted = true;\r\n      } else {\r\n        this.questions.splice(i, 1);\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Can't delete the only one question\");\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const observableBatch: Observable<Question>[] = [];\r\n\r\n\r\n    if (this.isValid()) {\r\n      console.log(\"submit\");\r\n      this.questionComponents.toArray().forEach(el => {\r\n        console.log(el.question);\r\n        observableBatch.push(el.getData());\r\n      });\r\n\r\n      forkJoin(observableBatch).pipe(\r\n        map(resp => this.quiz.questions = resp),\r\n        mergeMap(\r\n          _ => this.imageService.saveImage(this.image).pipe(\r\n            map(resp => { if (resp != \"\") this.quiz.image = resp; }),\r\n            mergeMap(_ => {\r\n              console.log(this.quiz);\r\n              return this.newQuizService.postQuiz(this.quiz);\r\n            })\r\n          )\r\n        )\r\n      ).subscribe(\r\n        _ => this.router.navigateByUrl('/submitted_quiz'),\r\n        err => {\r\n          alert(err.message);\r\n          console.log(err)\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      alert(\"Error. Check your questions\");\r\n    }\r\n  }\r\n\r\n  isValid(): boolean {\r\n    let valid = true;\r\n\r\n    this.questionComponents.toArray().forEach(\r\n      value => {\r\n        if (!value.isValid()) {\r\n          valid = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    return valid;\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n        <mat-card-title>\r\n            <h2>Quiz: {{quiz.name}}</h2>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <mat-accordion *ngFor=\"let question of questions; let i=index\">\r\n                <mat-expansion-panel [ngClass]=\"{'hidden': question.deleted}\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title fxLayout=\"row\" fxLayoutAlign=\"space-evenly center\">\r\n                            <h3>Question</h3>\r\n                        </mat-panel-title>\r\n                        <mat-panel-description>\r\n                            {{question.text?question.text:\"Add question info\"}}\r\n                        </mat-panel-description>\r\n                        <button mat-raised-button class=\"delete-button\" (click)=\"removeQuestion(i)\" color=\"warn\">\r\n                            Delete\r\n                        </button>\r\n                    </mat-expansion-panel-header>\r\n                    <app-question [question]=\"question\"></app-question>\r\n                </mat-expansion-panel>\r\n            </mat-accordion>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n                <button mat-fab (click)=\"addQuestion()\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button class=\"fab\" type=\"submit\" (click)=\"onSubmit()\">Submit</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { Answer } from '../../models/answer.model';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { ValidatorFn, ValidationErrors, FormArray } from '@angular/forms';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-answer',\r\n  templateUrl: './answer.component.html',\r\n  styleUrls: ['./answer.component.css']\r\n})\r\nexport class AnswerComponent implements OnInit {\r\n  submitted: boolean = false;\r\n\r\n  @Input() answer: Answer[] = [];\r\n  images: File[] = [];\r\n\r\n  questionId: number;\r\n\r\n  constructor(private imageService: ImageService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  getData(): Observable<Answer[]> {\r\n    return null;\r\n  }\r\n\r\n  getImages(): void {\r\n\r\n  }\r\n\r\n  saveImages(): Observable<any> {\r\n    let observableBatch = [];\r\n\r\n    this.answer.forEach(\r\n      (_, index) => {\r\n        observableBatch.push(\r\n          this.imageService.saveImage(this.images[index])\r\n        );\r\n      }\r\n    );\r\n\r\n    return forkJoin(observableBatch);\r\n  }\r\n}\r\n\r\nexport function SequenceValidator(): ValidatorFn {\r\n  return (formArray: FormArray): ValidationErrors => {\r\n    for (var _i = 1; _i < formArray.controls.length; _i++) {\r\n      let previous = formArray.controls[_i - 1];\r\n      let current = formArray.controls[_i];\r\n\r\n      if (current.get('text').value !== '' && previous.get('text').value === '') {\r\n        previous.setErrors({ mustExist: true });\r\n        return;\r\n      } else {\r\n        previous.setErrors(null);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n}","<p>\r\n  answer works!\r\n</p>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { AnswerService } from '../../service/answerService/answer.service';\r\nimport { AnswerComponent } from '../answer/answer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Answer } from '../../models/answer.model';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-boolean-answer',\r\n  templateUrl: './boolean-answer.component.html',\r\n  styleUrls: ['./boolean-answer.component.css']\r\n})\r\nexport class BooleanAnswerComponent extends AnswerComponent implements OnInit {\r\n  checkBox: boolean = false;\r\n\r\n  constructor(imageService: ImageService) {\r\n    super(imageService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let result: Answer = {\r\n      id: null,\r\n      questionId: 0,\r\n      text: \"\",\r\n      correct: true,\r\n      nextAnswerId: null,\r\n      image: null,\r\n      changed: true,\r\n      deleted: false\r\n    };\r\n    this.answer.push(result);\r\n  }\r\n\r\n  getData(): Observable<Answer[]> {\r\n    this.answer[0].questionId = this.questionId;\r\n    this.answer[0].text = this.checkBox ? \"true\" : \"false\";\r\n\r\n    return of(this.answer);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <input type=\"checkbox\" id=\"checkbox\" [ngModel]=\"checkBox\" (change)=\"checkBox=!checkBox\" ngDefaultControl>\r\n    <label for=\"checkbox\">Is question true?</label>\r\n</div>\r\n","import { CurrentUserService } from '../../service/current-user.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CategoryService } from '../../service/categoryService/category.service';\r\nimport { Category } from '../../models/category.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Quiz } from '../../models/add-quiz.model';\r\nimport { StatusType } from '../../models/quiz.model';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Tag } from '../../models/tag.model';\r\nimport { ImageUploadComponent } from 'src/app/image-upload/image-upload.component';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-quiz',\r\n  templateUrl: './new-quiz.component.html',\r\n  styleUrls: ['./new-quiz.component.css']\r\n})\r\nexport class NewQuizComponent implements OnInit {\r\n  @ViewChild('chipList') chipList: ElementRef<HTMLInputElement>;\r\n  @ViewChild(ImageUploadComponent) imageComponent: ImageUploadComponent;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  tags: Tag[] = [];\r\n\r\n  quizForm: FormGroup;\r\n  submitted: boolean = false;\r\n  categories: Category[];\r\n\r\n\r\n  quiz: Quiz = {\r\n    id: null,\r\n    name: \"\",\r\n    author: parseInt(this.currentUserService.getCurrentUser().id),\r\n    category_id: 1,\r\n    date: new Date().toISOString(),\r\n    description: \"\",\r\n    status: StatusType.PENDING.toString(),\r\n    modification_time: new Date().toISOString(),\r\n    image: null,\r\n    questions: [],\r\n    tags: [],\r\n    changed: true\r\n  };\r\n  image: File;\r\n\r\n  constructor(\r\n    private categoryService: CategoryService,\r\n    private formBuilder: FormBuilder,\r\n    private currentUserService: CurrentUserService,\r\n    private router: Router) {\r\n    if (this.router.getCurrentNavigation().extras.state?.quiz)\r\n      this.quiz = this.router.getCurrentNavigation().extras.state.quiz;\r\n    this.tags = this.quiz.tags;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadCategories();\r\n\r\n    console.log(this.quiz);\r\n\r\n    this.quizForm = this.formBuilder.group({\r\n      name: [this.quiz.name, [Validators.required, Validators.maxLength]],\r\n      category: [],\r\n      description: [this.quiz.description, [Validators.maxLength]]\r\n    });\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    if ((value || '').trim() && !(this.tags.find(element => element.name == value.trim()))) {\r\n      this.tags.push({ id: null, name: value.trim() });\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  remove(fruit: Tag): void {\r\n    const index = this.tags.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.tags.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  loadCategories(): Observable<Category[]> {\r\n    return this.categoryService.getCategories().pipe(\r\n      map(resp => {\r\n        this.categories = resp;\r\n        if (this.quiz.id != null)\r\n          this.getCategory();\r\n        return this.categories;\r\n      })\r\n    );\r\n  }\r\n\r\n  getCategory() {\r\n    let category = null;\r\n    if (this.quiz.id) {\r\n      category = this.categories?.find(item => item.id == this.quiz.category_id);\r\n    } else {\r\n      category = this.categories[0];\r\n    }\r\n    this.quizForm.get('category').setValue(category);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.quizForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.getData()\r\n\r\n    this.saveQuiz();\r\n  }\r\n\r\n  saveQuiz(): void {\r\n    this.router.navigateByUrl('/add_questions', {\r\n      state: {\r\n        quiz: this.quiz,\r\n        image: this.image\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getData(): void {\r\n    let input: Quiz = JSON.parse(JSON.stringify(this.quizForm.value));\r\n    this.quiz.name = input.name;\r\n    let category = this.quizForm.get('category').value;\r\n    this.quiz.category_id = category.id;\r\n    this.quiz.description = input.description;\r\n    this.quiz.status = this.quiz.status.toUpperCase();\r\n    this.image = this.imageComponent.selectedFile?.file;\r\n    this.quiz.tags = this.tags;\r\n    console.log(this.quiz);\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card>\r\n        <mat-card-title>\r\n            <h2>New Quiz</h2>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n            <div class=\"form-container\">\r\n                <form [formGroup]=\"quizForm\">\r\n\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter quiz name</mat-label>\r\n                        <input matInput #input maxlength=\"30\" formControlName=\"name\" placeholder=\"Quiz name\" required>\r\n                        <mat-hint align=\"end\">{{input.value?.length || 0}}/30</mat-hint>\r\n                        <mat-error\r\n                            *ngIf=\"quizForm.get('name').errors?.required && (submitted || quizForm.get('name').touched || quizForm.get('name').dirty)\">\r\n                            You must enter quiz name </mat-error>\r\n                        <mat-error *ngIf=\"quizForm.get('name').errors?.maxlength\">Quiz name can be max 30 characters\r\n                            long.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <app-image-upload class=\"form-field\"></app-image-upload>\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Select category</mat-label>\r\n                        <mat-select formControlName=\"category\" value=\"questionTypes[0]\">\r\n                            <mat-option *ngFor='let category of categories?categories:(loadCategories() |async)'\r\n                                [value]=\"category\">\r\n                                {{category.name | titlecase}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"form-field\">\r\n                        <mat-chip-list #chipList aria-label=\"Tag selection\">\r\n                            <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                                (removed)=\"remove(tag)\">\r\n                                {{tag.name}}\r\n                                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                            </mat-chip>\r\n                            <input placeholder=\"Add tag...\" [matChipInputFor]=\"chipList\"\r\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                                (matChipInputTokenEnd)=\"add($event)\">\r\n                        </mat-chip-list>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"form-field\">\r\n                        <mat-label>Description</mat-label>\r\n                        <textarea matInput class=\"form-control\" formControlName=\"description\"\r\n                            placeholder=\"Description\"></textarea>\r\n                        <mat-error *ngIf=\"quizForm.get('name').errors?.maxlength\">Description can be max 360 characters\r\n                            long.\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </form>\r\n            </div>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button mat-raised-button type=\"submit\" (click)=\"onSubmit()\">Next</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { AnswerComponent, SequenceValidator } from '../answer/answer.component';\r\nimport { Component, OnInit, ViewChildren, QueryList, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormArray, Validators, FormControl, FormBuilder } from '@angular/forms';\r\nimport { ImageUploadComponent } from '../../image-upload/image-upload.component';\r\nimport { Answer } from 'src/app/models/answer.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-optional-answer',\r\n  templateUrl: './optional-answer.component.html',\r\n  styleUrls: ['./optional-answer.component.css']\r\n})\r\nexport class OptionalAnswerComponent extends AnswerComponent implements OnInit {\r\n  @ViewChildren(ImageUploadComponent) imageComponents!: QueryList<ImageUploadComponent>;\r\n\r\n  answerForm: FormGroup;\r\n  items: FormArray;\r\n\r\n  maxAnswer = 4;\r\n  minRequired = 2;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    imageService: ImageService) {\r\n    super(imageService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.answerForm = new FormGroup({\r\n      items: this.formBuilder.array([])\r\n    });\r\n    for (var _i = 0; _i < this.maxAnswer; _i++) {\r\n      this.answer.push({\r\n        id: null,\r\n        questionId: 0,\r\n        text: \"\",\r\n        correct: false,\r\n        nextAnswerId: null,\r\n        image: null,\r\n        changed: true,\r\n        deleted: false\r\n      });\r\n      const correctControl = new FormControl(this.answer[_i].correct, []);\r\n      const textControl = new FormControl(this.answer[_i].text, []);\r\n      if (_i < this.minRequired) {\r\n        textControl.setValidators([Validators.required, Validators.maxLength(30)]);\r\n      }\r\n      this.items = this.answerForm.get('items') as FormArray;\r\n      this.items.push(\r\n        this.formBuilder.group({\r\n          isCorrect: correctControl,\r\n          text: textControl\r\n        })\r\n      )\r\n    }\r\n    this.answerForm.get('items').setValidators([SequenceValidator()]);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.items.setValidators(SequenceValidator());\r\n    this.items.markAsTouched();\r\n    return this.answerForm.valid;\r\n  }\r\n\r\n  getData(): Observable<Answer[]> {\r\n    this.getImages();\r\n\r\n    const items = this.answerForm.get('items') as FormArray;\r\n    for (var i = 0; i < this.answer.length; i++) {\r\n      const current = items.at(i);\r\n      if (this.answer[i].id != null && current.dirty) {\r\n        this.answer[i].changed = true;\r\n      }\r\n\r\n      const newText = current.get('text').value;\r\n\r\n      if (this.answer[i].text != \"\" && newText == \"\") {\r\n        this.answer[i].deleted = true;\r\n      }\r\n\r\n      this.answer[i].correct = current.get('isCorrect').value;\r\n      this.answer[i].text = newText;\r\n\r\n      if (this.answer[i].text === \"\" || this.answer[i].text == null)\r\n        break;\r\n    }\r\n\r\n    return this.saveImages().pipe(\r\n      map((resp) => {\r\n        for (let i in resp) {\r\n          if (resp[i] !== \"\") {\r\n            this.answer[i].image = resp[i];\r\n          }\r\n        }\r\n      }),\r\n      mergeMap(_ => {\r\n        const result = [];\r\n        for (let i of this.answer) {\r\n          if (i.text || i.deleted) {\r\n            result.push(i);\r\n          }\r\n        }\r\n        return of(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  getImages(): void {\r\n    this.imageComponents.forEach(image => {\r\n      if (image.selectedFile != null) {\r\n        this.images.push(image.selectedFile?.file);\r\n      } else {\r\n        this.images.push(null);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"answerForm\">\r\n        <ol formArrayName=\"items\">\r\n            <li *ngFor=\"let item of items.controls; let i=index\">\r\n                <div [formGroupName]=\"i\">\r\n                    <div>\r\n                        <input id=\"checkbox\" type=\"checkbox\" formControlName=\"isCorrect\" color=\"primary\">\r\n                        <label for=\"checkbox\">Check if answer is correct</label>\r\n                    </div>\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter answer name</mat-label>\r\n                        <input matInput #input maxlength=\"30\" formControlName=\"text\" placeholder=\"Quiz name\">\r\n                        <mat-error\r\n                            *ngIf=\"items.controls[i].get('text').errors?.required && (submitted || items.controls[i].get('text').touched || items.controls[i].get('text').dirty)\">\r\n                            Should have at least two answers.\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].get('text').errors?.maxlength\"> Answer can be max\r\n                            30 characters long. </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].errors?.mustExist\">Add text. Next\r\n                            answer is not empty. </mat-error>\r\n                    </mat-form-field>\r\n                    <app-image-upload></app-image-upload>\r\n                    <mat-divider *ngIf=\"i!=items.controls.length-1\"></mat-divider>\r\n                </div>\r\n            </li>\r\n        </ol>\r\n    </form>\r\n</div>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { Validators } from '@angular/forms';\r\nimport { SequenceAnswerComponent } from './../sequence-answer/sequence-answer.component';\r\nimport { StringAnswerComponent } from './../string-answer/string-answer.component';\r\nimport { BooleanAnswerComponent } from '../boolean-answer/boolean-answer.component';\r\nimport { OptionalAnswerComponent } from '../optional-answer/optional-answer.component';\r\nimport { AnswerComponent } from '../answer/answer.component';\r\nimport { QuestionService } from '../../service/questionService/question.service';\r\nimport { Question, QuestionType } from '../../models/question.model';\r\nimport { Component, OnInit, ComponentFactoryResolver, ViewChild, ViewContainerRef, AfterViewInit, ComponentRef, ComponentFactory, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ImageUploadComponent } from '../../image-upload/image-upload.component';\r\nimport { TitleCasePipe } from '@angular/common';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { forkJoin, of, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit, AfterViewInit {\r\n  quizId: number;\r\n  submitted: boolean = false;\r\n  send: boolean = false;\r\n\r\n  questionForm: FormGroup;\r\n  questionTypes: string[] = [];\r\n  componentRef: ComponentRef<AnswerComponent>\r\n\r\n  @Input() question: Question = {\r\n    id: null,\r\n    quizId: null,\r\n    type: \"Option\",\r\n    text: \"\",\r\n    active: true,\r\n    answerList: [],\r\n    image: null,\r\n    changed: true,\r\n    deleted: false\r\n  };\r\n  image: File = null;\r\n\r\n  @ViewChild('dynamicComponent', { read: ViewContainerRef }) answerHost;\r\n  @ViewChild(ImageUploadComponent) imageComponent: ImageUploadComponent;\r\n\r\n  constructor(public questionService: QuestionService,\r\n    private formBuilder: FormBuilder,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private imageService: ImageService) {\r\n    Object.keys(QuestionType).forEach(\r\n      value => this.questionTypes.push(value)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.questionForm = this.formBuilder.group({\r\n      text: [this.question.text, [Validators.required, Validators.maxLength(360)]],\r\n      type: [this.question.type]\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.questionForm.get('type').setValue(this.question.type);\r\n    this.loadComponent(this.question.type);\r\n  }\r\n\r\n  loadComponent(value: string) {\r\n    let titleCasePipe = new TitleCasePipe();\r\n    value = titleCasePipe.transform(value);\r\n    var componentFactory: ComponentFactory<AnswerComponent>;\r\n    switch (value) {\r\n      case QuestionType.OPTION:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(OptionalAnswerComponent);\r\n        break;\r\n      case QuestionType.BOOLEAN:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(BooleanAnswerComponent);\r\n        break;\r\n      case QuestionType.ANSWER:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(StringAnswerComponent);\r\n        break;\r\n      case QuestionType.SEQUENCE:\r\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(SequenceAnswerComponent);\r\n        break;\r\n    }\r\n\r\n    this.answerHost.clear();\r\n    this.componentRef = this.answerHost.createComponent(componentFactory);\r\n    if (this.question.id) {\r\n      if (value === QuestionType.OPTION || value === QuestionType.SEQUENCE) {\r\n        while (this.question.answerList.length < 4) {\r\n          this.question.answerList.push({\r\n            id: null,\r\n            questionId: 0,\r\n            text: \"\",\r\n            correct: false,\r\n            nextAnswerId: null,\r\n            image: null,\r\n            changed: true,\r\n            deleted: true\r\n          });\r\n        }\r\n      }\r\n      this.componentRef.instance.answer = this.question.answerList;\r\n    }\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.questionForm.markAsTouched();\r\n    return this.questionForm.valid && this.componentRef.instance.isValid();\r\n  }\r\n\r\n  getData(): Observable<Question> {\r\n    this.question.quizId = this.quizId;\r\n    this.question.type = this.question.type.toUpperCase();\r\n    this.question.text = this.questionForm.get('text').value;\r\n    this.question.type = this.questionForm.get('type').value.toUpperCase();\r\n    this.question.answerList = this.componentRef.instance.answer;\r\n\r\n    return this.componentRef.instance.getData().pipe(\r\n      map(resp => { console.log(resp); this.question.answerList = resp; }),\r\n      mergeMap(_ => this.imageService.saveImage(this.imageComponent.selectedFile?.file).pipe(\r\n        map(resp => { if (resp != \"\") this.question.image = resp; }),\r\n        mergeMap(_ => of(this.question))\r\n      ))\r\n    );\r\n  }\r\n\r\n  onOptionSelected(value: string) {\r\n    console.log(value);\r\n    this.loadComponent(value);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <form [formGroup]=\"questionForm\">\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput id=\"text\" type=\"text\" formControlName=\"text\" class=\"form-control\" maxlength=\"360\"\r\n                required></textarea>\r\n            <mat-error\r\n                *ngIf=\"questionForm.get('text').errors?.required && (submitted ||questionForm.get('text').touched || questionForm.get('text').dirty)\"\r\n                class=\"alert alert-danger\">Question\r\n                cannot be empty. </mat-error>\r\n            <mat-error *ngIf=\"questionForm.get('text').errors?.maxlength\" class=\"alert alert-danger\">Question can be max\r\n                30 characters long.</mat-error>\r\n        </mat-form-field>\r\n        <app-image-upload> </app-image-upload>\r\n\r\n        <mat-form-field class=\"form-field\">\r\n            <mat-label>Answer type</mat-label>\r\n            <mat-select id=\"type\" formControlName=\"type\" class=\"form-control\"\r\n                (selectionChange)=\"onOptionSelected($event.value)\">\r\n                <mat-option *ngFor='let type of questionTypes' [value]=\"type\">\r\n                    {{type | titlecase}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <h3>Answers</h3>\r\n        <ng-template #dynamicComponent></ng-template>\r\n    </form>\r\n</div>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ImageUploadComponent } from '../../image-upload/image-upload.component';\r\nimport { Validators, FormControl, FormGroup, FormArray, FormBuilder } from '@angular/forms';\r\nimport { AnswerComponent, SequenceValidator } from '../answer/answer.component';\r\nimport { Component, OnInit, ViewChildren, QueryList, ChangeDetectorRef } from '@angular/core';\r\nimport { mergeMap, map } from 'rxjs/operators';\r\nimport { Answer } from 'src/app/models/answer.model';\r\n\r\n@Component({\r\n  selector: 'app-sequence-answer',\r\n  templateUrl: './sequence-answer.component.html',\r\n  styleUrls: ['./sequence-answer.component.css']\r\n})\r\nexport class SequenceAnswerComponent extends AnswerComponent implements OnInit {\r\n  @ViewChildren(ImageUploadComponent) imageComponents!: QueryList<ImageUploadComponent>;\r\n\r\n  answerForm: FormGroup;\r\n  items: FormArray;\r\n\r\n  maxAnswer = 4;\r\n  minRequired = 2;\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    imageService: ImageService) {\r\n    super(imageService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.answerForm = new FormGroup({\r\n      items: this.formBuilder.array([])\r\n    });\r\n    this.items = this.answerForm.get('items') as FormArray;\r\n    for (var _i = 0; _i < this.maxAnswer; _i++) {\r\n      this.answer.push({\r\n        id: null,\r\n        questionId: 0,\r\n        text: \"\",\r\n        correct: true,\r\n        nextAnswerId: null,\r\n        image: null,\r\n        changed: true,\r\n        deleted: false\r\n      });\r\n      const formControl = new FormControl(this.answer[_i].text, []);\r\n      if (_i < this.minRequired) {\r\n        formControl.setValidators([Validators.required, Validators.maxLength(30)]);\r\n      }\r\n      this.items = this.answerForm.get('items') as FormArray;\r\n      this.items.push(\r\n        this.formBuilder.group({\r\n          text: formControl\r\n        })\r\n      )\r\n    }\r\n    this.answerForm.get('items').setValidators([SequenceValidator()]);\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    this.items.setValidators(SequenceValidator());\r\n    return this.answerForm.valid;\r\n  }\r\n\r\n  getData(): Observable<Answer[]> {\r\n    this.getImages();\r\n    for (var i = 0; i < this.answer.length; i++) {\r\n      if (this.answer[i].id != null && (this.answerForm.get('items') as FormArray).at(i).dirty) {\r\n        this.answer[i].changed = true;\r\n      }\r\n\r\n      const newText = (this.answerForm.get('items') as FormArray).at(i).get(\"text\").value;\r\n\r\n      if (this.answer[i].text != \"\" && newText == \"\") {\r\n        this.answer[i].deleted = true;\r\n      }\r\n\r\n      this.answer[i].text = newText;\r\n\r\n      if (this.answer[i].text === \"\" || this.answer[i].text == null)\r\n        break;\r\n    }\r\n\r\n    return this.saveImages().pipe(\r\n      map((resp) => {\r\n        for (let i in resp) {\r\n          if (resp[i] !== \"\") {\r\n            this.answer[i].image = resp[i];\r\n          }\r\n        }\r\n      }),\r\n      mergeMap(_ => {\r\n        const result = [];\r\n        for (let i of this.answer) {\r\n          if (i.text || i.deleted) {\r\n            result.push(i);\r\n          }\r\n        }\r\n        return of(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  getImages(): void {\r\n    this.imageComponents.forEach(image => {\r\n      if (image.selectedFile != null) {\r\n        this.images.push(image.selectedFile.file);\r\n      } else {\r\n        this.images.push(null);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <form [formGroup]=\"answerForm\">\r\n        <ol formArrayName=\"items\">\r\n            <li *ngFor=\"let item of items.controls; let i=index\">\r\n                <div [formGroupName]=\"i\">\r\n                    <mat-form-field class=\"form-field\" appearance=\"outline\">\r\n                        <mat-label>Enter answer name</mat-label>\r\n                        <input matInput class=\"form-control\" placeholder=\"Answer\" formControlName=\"text\">\r\n                        <mat-error\r\n                            *ngIf=\"items.controls[i].get('text').errors?.required && (submitted || items.controls[i].get('text').touched || items.controls[i].get('text').dirty)\"\r\n                            class=\"alert alert-danger\">Should have at\r\n                            least two answers.\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].get('text').errors?.maxlength\" class=\"alert alert-danger\">\r\n                            Answer\r\n                            can be max 30 characters long. </mat-error>\r\n                        <mat-error *ngIf=\"items.controls[i].errors?.mustExist\" class=\"alert alert-danger\">Add text. Next\r\n                            answer is not empty. </mat-error>\r\n                    </mat-form-field>\r\n                    <app-image-upload></app-image-upload>\r\n                    <hr *ngIf=\"i!=items.controls.length-1\" class=\"my-4\">\r\n                </div>\r\n            </li>\r\n        </ol>\r\n    </form>\r\n</div>\r\n","import { ImageService } from './../../service/imageService/image.service';\r\nimport { Validators } from '@angular/forms';\r\nimport { AnswerComponent } from '../answer/answer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Answer } from '../../models/answer.model';\r\nimport { AnswerService } from '../../service/answerService/answer.service';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-string-answer',\r\n  templateUrl: './string-answer.component.html',\r\n  styleUrls: ['./string-answer.component.css']\r\n})\r\nexport class StringAnswerComponent extends AnswerComponent implements OnInit {\r\n  text: FormControl;\r\n\r\n  constructor(imageService: ImageService) {\r\n    super(imageService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let result: Answer = {\r\n      id: null,\r\n      questionId: 0,\r\n      text: \"\",\r\n      correct: true,\r\n      nextAnswerId: null,\r\n      image: null,\r\n      changed: true,\r\n      deleted: false\r\n    };\r\n    this.answer.push(result);\r\n\r\n    this.text = new FormControl(\r\n      this.answer[0].text, Validators.required\r\n    );\r\n  }\r\n\r\n  isValid(): boolean {\r\n    this.submitted = true;\r\n    return this.text.valid;\r\n  }\r\n\r\n  getData(): Observable<Answer[]> {\r\n    if (this.answer[0].id != null && this.text.dirty) {\r\n      this.answer[0].changed = true;\r\n    }\r\n    this.answer[0].text = this.text.value;\r\n\r\n    return of(this.answer);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Enter answer</mat-label>\r\n        <input matInput class=\"form-control\" placeholder=\"Answer\" aria-label=\"Answer\" aria-describedby=\"basic-addon1\"\r\n            [formControl]=\"text\" required>\r\n        <mat-error *ngIf=\"text.invalid && (submitted ||text.dirty || text.touched)\" class=\"alert alert-danger\">\r\n            <mat-error *ngIf=\"text.errors.required\">\r\n                Answer is required.\r\n            </mat-error>\r\n        </mat-error>\r\n    </mat-form-field>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {CurrentUserService} from \"../../service/current-user.service\";\r\n\r\n@Component({\r\n  selector: 'app-submitted-quiz',\r\n  templateUrl: './submitted-quiz.component.html',\r\n  styleUrls: ['./submitted-quiz.component.css']\r\n})\r\nexport class SubmittedQuizComponent implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goToProfile() {\r\n    this.router.navigate(['profile', this.currentUserService.getCurrentUser().id, {outlets: {profilenav: 'profinfo'}}]);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n    <mat-card>\r\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\r\n            <mat-icon fxFlexAlign=\"center\">done_outline</mat-icon>\r\n            <h3>Quiz successfully submitted!</h3>\r\n        </mat-card-content>\r\n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n            <button mat-button target=\"_blank\" (click)=\"goToProfile()\">Go back to profile</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {QuizCheckModel} from '../../models/quiz-check.model';\r\nimport {ModeratorComment} from \"../../models/moderator-comment\";\r\nimport {QuizCheckService} from \"../../service/quizCheckService/quiz-check.service\";\r\nimport {StatusType} from \"../../models/status-type.enum\";\r\n\r\n@Component({\r\n  selector: 'app-question-check',\r\n  templateUrl: './question-check.component.html',\r\n  styleUrls: ['./question-check.component.css']\r\n})\r\nexport class QuestionCheckComponent implements OnInit {\r\n  public modComment: ModeratorComment;\r\n  public commentForm: FormGroup;\r\n  private subscription: Subscription;\r\n  quiz: QuizCheckModel;\r\n  id: string;\r\n  currentQuizId: number;\r\n  currentUserId: number;\r\n  checkedQuestions = [7];\r\n  comment: string;\r\n  submitted = false;\r\n  labelPosition = 'before';\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private quizService: QuizCheckService,\r\n              private activateRoute: ActivatedRoute,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuiz(JSON.parse(localStorage.getItem('currentQuiz')).id);\r\n    this.commentForm = this.formBuilder.group({\r\n      comment: ['', [Validators.required, Validators.minLength(8)]],\r\n    });\r\n  }\r\n  public getQuiz(id: string){\r\n    this.quizService.getQuizById(id).subscribe(\r\n      (resp: any) => {\r\n        this.quiz = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Something wrong with downloading quiz');\r\n      }\r\n    );\r\n  }\r\n  activeQuiz() {\r\n    this.currentQuizId = JSON.parse(localStorage.getItem('currentQuiz')).id;\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n    this.unsignModeratorQuiz();\r\n    this.quizService.updateStatusQuiz(this.currentQuizId, StatusType.ACTIVE).subscribe(\r\n      (resp: any) => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'pendingQuizzes'}}]);\r\n        });\r\n      },\r\n      error => {\r\n        alert('Something wrong while change active status');\r\n      }\r\n    );\r\n  }\r\n  checkCount(i: number) {\r\n    if (!this.checkedQuestions.includes(i)){\r\n      this.checkedQuestions.push(i);\r\n    }\r\n    else {\r\n      this.checkedQuestions.splice(this.checkedQuestions.indexOf(i), i);\r\n    }\r\n  }\r\n  allChecked(){\r\n    if ( this.checkedQuestions.length - 1  === this.quiz.questions.length){\r\n      return true;\r\n    }\r\n  }\r\n  leaveComment() {\r\n    this.currentQuizId = JSON.parse(localStorage.getItem('currentQuiz')).id;\r\n    this.currentUserId = JSON.parse(localStorage.getItem('currentUser')).id;\r\n    this.unsignModeratorQuiz();\r\n    const com = new ModeratorComment(this.currentQuizId, this.currentUserId, this.comment, new Date());\r\n    this.quizService.addComment(com).subscribe(\r\n      (resp: any) => {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['profile', this.currentUserId, {outlets: {profilenav: 'pendingQuizzes'}}]);\r\n          alert('Comment sent successfully');\r\n        });\r\n      },\r\n      error => {\r\n        alert('Something wrong while leave comment');\r\n      }\r\n    );\r\n  }\r\n  unsignModeratorQuiz() {\r\n    this.quizService.unsignQuiz(this.currentQuizId).subscribe(\r\n      (resp: any) => {\r\n      },\r\n    error => {\r\n      alert('Something wrong while unsign');\r\n    }\r\n    );\r\n  }\r\n  get f() { return this.commentForm.controls; }\r\n\r\n\r\n  public commentFormValidation(){\r\n    this.submitted = true;\r\n\r\n    if (this.commentForm.invalid) {\r\n      return;\r\n    }\r\n    this.comment = this.commentForm.value.comment;\r\n    this.leaveComment();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"quiz\">\r\n  <form [formGroup]=\"commentForm\" (ngSubmit)=\"commentFormValidation()\">\r\n<div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngFor=\"let q of quiz.questions; index as iq\">\r\n  <mat-card class=\"example-card\" >\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\"></div>\r\n      <mat-card-subtitle> Id {{q.id}} type {{q.type}}</mat-card-subtitle>\r\n      <mat-card-title >Question {{iq+1}}: {{q.text}}</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div   *ngFor=\"let a of q.answers; index as ia\">\r\n      <div class=\"true-answer-div\" *ngIf=\"a.correct\">\r\n        {{ia+1}}) {{a.text}}\r\n      </div>\r\n        <div class=\"false-answer-div\" *ngIf=\"!a.correct\">\r\n            {{ia+1}}) {{a.text}}\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <div class=\"checkBox\">\r\n    <mat-checkbox [labelPosition]=\"labelPosition\" class=\"example-checkbox\" (change)=\"checkCount(q.id);\">Checked</mat-checkbox>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n<br><div fxLayout=\"column\">\r\n      <mat-accordion >\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header class=\"reject-comment\">\r\n            <mat-panel-title>\r\n              Reject\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Leave a comment, why it was rejected\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n  <mat-form-field class=\"form-field\" fxLayout=\"column\" >\r\n    <textarea matInput row=\"5\" class=\"form-control\" formControlName=\"comment\"\r\n              placeholder=\"Comment\"></textarea>\r\n  </mat-form-field>\r\n          <div fxLayout=\"column\">\r\n  <button class = \"mat-button-send\"  mat-flat-button type=\"submit\">Send and reject</button>\r\n          </div>\r\n        </mat-expansion-panel>\r\n          </mat-accordion>\r\n    <button class = \"mat-button-active\" fxLayout=\"column\" mat-flat-button *ngIf=\"allChecked()\" (click)=\"activeQuiz()\">Approve</button>\r\n    </div>\r\n  </form>\r\n  <br>\r\n  <br>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Role} from '../../models/role.enum';\r\nimport {ShareIdService} from '../../service/profileService/share-id.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-check-nav',\r\n  templateUrl: './quiz-check-nav.component.html',\r\n  styleUrls: ['./quiz-check-nav.component.css']\r\n})\r\nexport class QuizCheckNavComponent implements OnInit {\r\n\r\n  currentQuiz = JSON.parse(localStorage.getItem('currentQuiz'));\r\n  id: any;\r\n  constructor() {\r\n    this.id = this.currentQuiz.id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.currentQuiz.id;\r\n  }\r\n\r\n}\r\n","<nav mat-tab-nav-bar *ngIf=\"currentQuiz.id == id\">\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {quiznav: 'quizinfo'}}]\"\r\n     routerLinkActive #quizInfo=\"routerLinkActive\" [active]=\"quizInfo.isActive\">Quiz Info</a>\r\n  <a mat-tab-link [routerLink]=\"[{outlets: {quiznav: 'qAnda'}}]\"\r\n     routerLinkActive #qAnda=\"routerLinkActive\" [active]=\"qAnda.isActive\">Content</a>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Quiz} from '../models/pending-quizzes.model';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {QuizService} from '../service/quizService/quiz.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ShareIdService} from '../service/profileService/share-id.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz-check',\r\n  templateUrl: './quiz-check.component.html',\r\n  styleUrls: ['./quiz-check.component.css']\r\n})\r\nexport class QuizCheckComponent implements OnInit {\r\n  private subscription: Subscription;\r\n  id: string;\r\n  constructor(private activateRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private shareId: ShareIdService) {\r\n    this.subscription = this.activateRoute.params.subscribe(\r\n      params => {\r\n        this.id = params.id;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\" >\r\n  <div fxFlex=\"50\">\r\n    <div id=\"navigation\">\r\n      <app-quiz-check-nav ></app-quiz-check-nav>\r\n    </div>\r\n    <router-outlet name=\"quiznav\"></router-outlet>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Quiz} from '../../models/pending-quizzes.model';\r\nimport {Router} from '@angular/router';\r\nimport {ShareIdService} from \"../../service/profileService/share-id.service\";\r\nimport {PlatformLocation} from \"@angular/common\";\r\nimport {CommentHistory} from \"../../models/comment-history\";\r\nimport {QuizCheckService} from \"../../service/quizCheckService/quiz-check.service\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-info',\r\n  templateUrl: './quiz-info.component.html',\r\n  styleUrls: ['./quiz-info.component.css']\r\n})\r\nexport class QuizInfoComponent implements OnInit {\r\n  public quiz: Quiz;\r\n  currentQuizId: string;\r\n  id: string;\r\n  public comments: CommentHistory[];\r\n\r\n  constructor(private quizService: QuizCheckService,\r\n              private shareId: ShareIdService,\r\n              private location: PlatformLocation,\r\n              private router: Router){\r\n    this.currentQuizId = JSON.parse(localStorage.getItem('currentQuiz')).id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuiz(this.currentQuizId);\r\n    this.getCommentHistory();\r\n    this.location.onPopState(() => {\r\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n        this.router.navigate(['checkquiz', this.currentQuizId, {outlets: {quiznav: 'quizinfo'}}]);\r\n      });\r\n    });\r\n  }\r\n  public getCommentHistory(){\r\n    this.quizService.getCommentHistory(this.currentQuizId).subscribe(\r\n      (resp: any) => {\r\n        this.comments = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Something wrong with downloading comment history');\r\n      }\r\n    );\r\n  }\r\n\r\n  ngSubmit(){}\r\n\r\n  public getQuiz(id: string){\r\n    this.quizService.getQuizInfoById(id).subscribe(\r\n      (resp: any) => {\r\n        this.quiz = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Something wrong with downloading quiz');\r\n      }\r\n    );\r\n  }\r\n  checkOut(id: number) {\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate(['profile', id, {outlets: {profilenav: 'profinfo'}}]);\r\n    });\r\n  }\r\n}\r\n","<h2 align =\"center\"> Quiz info </h2>\r\n<div *ngIf=\"quiz\">\r\n  <div class=\"container\" >\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n      <mat-card class=\"info-card\" >\r\n        <mat-card-header>\r\n          <mat-card-title>{{quiz.name}}</mat-card-title>\r\n          <mat-card-subtitle>{{quiz.category}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n    <p>Author: {{quiz.authorName}} {{quiz.authorSurname}}</p>\r\n          <mat-divider></mat-divider>\r\n    <p>Date: {{quiz.date | date}}</p>\r\n          <mat-divider></mat-divider>\r\n    <p>Description: {{quiz.description}}</p>\r\n          <mat-divider></mat-divider>\r\n    <p>Status: {{quiz.status}}</p>\r\n          <mat-divider></mat-divider>\r\n    <p>Modification time: {{quiz.modificationTime | date}}</p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div *ngIf=\"comments\">\r\n      <h2 align=\"center\">Moderator`s comments history</h2>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngFor=\"let q of comments; index as i\">\r\n      <mat-card class=\"example-card\" >\r\n    <mat-card-header>\r\n      <mat-card-title> Quiz rejected by <a class=\"nav-link\" routerLink=\"\"\r\n                                           (click)=\"checkOut(q.moderatorId)\">\r\n        {{q.moderatorName}} {{q.moderatorSurname}}</a></mat-card-title>\r\n      <mat-card-subtitle>{{q.commentDate | date}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"comment-title\">\r\n        Moderator comment:\r\n      </div>\r\n      <div class=\"comment\">\r\n                  {{q.comment}}\r\n        </div>\r\n    </mat-card-content>\r\n      </mat-card>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n","import { AuthenticationService } from './../../service/loginService/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Quiz } from 'src/app/models/quiz';\r\n\r\n\r\nexport interface QuizDialogData {\r\n  quizData: Quiz;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-quiz-dialog',\r\n  templateUrl: './quiz-dialog.component.html',\r\n  styleUrls: ['./quiz-dialog.component.css']\r\n})\r\nexport class QuizDialogComponent implements OnInit {\r\n  isLogin: boolean;\r\n\r\n  constructor(public dialogRef: MatDialogRef<QuizDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: QuizDialogData,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLogin = this.authenticationService.logIn;\r\n  }\r\n\r\n  onStartClick(): void {\r\n    this.router.navigate(['/game/settings', this.data.quizData.id]);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    <img mat-card-image [src]=\"data.quizData.image\" alt=\"Photo of a Shiba Inu\">\r\n    <h2>{{data.quizData.name}}</h2>\r\n    <div>\r\n        <p class=\"header\">Category </p>\r\n        <p>{{data.quizData.category}}</p>\r\n    </div>\r\n    <div>\r\n        <p class=\"header\">Tags </p>\r\n        <mat-chip-list>\r\n            <mat-chip *ngFor=\"let tag of data.quizData.tags\">{{tag.name}}</mat-chip>\r\n        </mat-chip-list>\r\n    </div>\r\n    <div>\r\n        <p class=\"header\">Description </p>\r\n        <p>{{data.quizData.description}}</p>\r\n    </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-flat-button (click)=\"onStartClick()\" color=\"accent\" *ngIf=\"isLogin\">Start Game</button>\r\n    <button mat-flat-button mat-dialog-close>Close</button>\r\n</div>\r\n","import { QuizDialogComponent } from './quiz-dialog/quiz-dialog.component';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Quiz } from \"../models/quiz\";\r\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\r\nimport { AuthenticationService } from \"../service/loginService/authentication.service\";\r\nimport { QuizService } from \"../service/quizService/quiz.service\";\r\nimport { CurrentUserService } from \"../service/current-user.service\";\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.css']\r\n})\r\nexport class QuizComponent implements OnInit {\r\n  @Input()\r\n  quizData: Quiz;\r\n  quizImage: SafeResourceUrl;\r\n\r\n  constructor(private sanitizer: DomSanitizer,\r\n    public authenticationService: AuthenticationService,\r\n    private quizService: QuizService,\r\n    private currentUserService: CurrentUserService,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.quizImage = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64,' + this.quizData.image);\r\n  }\r\n\r\n  markQuizAsFavorite(): void {\r\n    this.quizService.markQuizAsFavorite(this.quizData.id, (this.currentUserService.getCurrentUser().id)).subscribe(\r\n      resp => {\r\n        this.quizData.favorite = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  unmarkQuizAsFavorite(): void {\r\n    this.quizService.unmarkQuizAsFavorite(this.quizData.id, (this.currentUserService.getCurrentUser().id)).subscribe(\r\n      resp => {\r\n        this.quizData.favorite = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialog.open(QuizDialogComponent, {\r\n      width: '30em',\r\n      data: { quizData: this.quizData, quizImage: this.quizImage }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"card\">\r\n  <mat-card-header class=\"head\">\r\n    <mat-card-title>{{quizData.name}}</mat-card-title>\r\n    <mat-card-subtitle>Category: {{quizData.category}}</mat-card-subtitle>\r\n    <div *ngIf=\"authenticationService.logIn\">\r\n      <button mat-icon-button *ngIf=\"quizData.favorite\" (click)=\"unmarkQuizAsFavorite()\">\r\n        <mat-icon>star</mat-icon>\r\n      </button>\r\n      <button mat-icon-button *ngIf=\"!quizData.favorite\" (click)=\"markQuizAsFavorite()\">\r\n        <mat-icon>star_border</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-card-header>\r\n  <img mat-card-image class=\"image\" [src]=quizData.image>\r\n  <mat-card-content>\r\n    <mat-chip-list>\r\n      <mat-chip *ngFor=\"let tag of quizData.tags\">{{tag.name}}</mat-chip>\r\n    </mat-chip-list>\r\n  </mat-card-content>\r\n  <mat-card-actions >\r\n    <button id=\"openButton\" [disableRipple]=\"true\" (click)=\"openDialog()\"  mat-button>OPEN</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Category} from \"../models/category.model\";\r\nimport {CategoryService} from \"../service/categoryService/category.service\";\r\nimport {Quiz} from \"../models/quiz\";\r\nimport {QuizService} from \"../service/quizService/quiz.service\";\r\nimport {Subject} from \"rxjs\";\r\nimport {debounceTime, distinctUntilChanged} from \"rxjs/operators\";\r\nimport {AuthenticationService} from \"../service/loginService/authentication.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-quizzes-page',\r\n  templateUrl: './quizzes-page.component.html',\r\n  styleUrls: ['./quizzes-page.component.css']\r\n})\r\nexport class QuizzesPageComponent implements OnInit {\r\n  categories: Category[];\r\n  quizzes: Quiz[];\r\n  recommendationQuizzes: Quiz[];\r\n\r\n  length = 0;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  pageSizeOptions: number[] = [10, 20, 30, 40, 50];\r\n  currentQuizCategory: number;\r\n  recommendationLimit: number = 20;\r\n\r\n  public userRequest: string;\r\n  userQuestionUpdate = new Subject<string>();\r\n\r\n  constructor(private categoryService: CategoryService,\r\n              private quizService: QuizService,\r\n              public authService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService.getCategories().subscribe(\r\n      resp => this.categories = resp\r\n    );\r\n    this.setPaginationParamDefault();\r\n    this.getAllQuizzes();\r\n\r\n    this.authService.logIn ? this.getRecommendationForAuthUser(): this.getRecommendationForAnonimus();\r\n\r\n    this.userQuestionUpdate.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged())\r\n      .subscribe(userSearch => {\r\n        this.setPaginationParamDefault();\r\n        userSearch.length ==0 ? this.getAllQuizzes() : this.filterRequest(userSearch);\r\n      });\r\n  }\r\n\r\n  filterRequest(filterText: string) {\r\n    this.quizService.getFilteredQuizzes(filterText, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  onPageChanged(e) {\r\n    this.pageIndex = e.pageIndex;\r\n    this.pageSize = e.pageSize;\r\n    if (this.currentQuizCategory != undefined) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.searchByCategory(this.currentQuizCategory);\r\n    } else if (this.userRequest != undefined && this.userRequest) {\r\n      if (this.pageSize == undefined) {\r\n        this.setPaginationParamDefault();\r\n      }\r\n      this.filterRequest(this.userRequest);\r\n    } else {\r\n      this.getAllQuizzes();\r\n    }\r\n  }\r\n\r\n  setPaginationParamDefault() {\r\n    this.pageIndex = 0;\r\n    this.pageSize = 10;\r\n  }\r\n\r\n  getAllQuizzes() {\r\n    console.log(\"pagesize \" + this.pageSize );\r\n    this.quizService.getQuizzes(this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.currentQuizCategory = undefined;\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  searchByCategory(categoryid: number) {\r\n    this.quizService.getQuizzesByCategory(categoryid, this.pageSize, this.pageIndex).subscribe(\r\n      resp => {\r\n        this.quizzes = resp.responceList;\r\n        this.length = resp.totalNumberOfElement;\r\n      }\r\n    );\r\n  }\r\n\r\n  setCurrentCategory(categoryId: number) {\r\n    this.currentQuizCategory = categoryId;\r\n  }\r\n\r\n  getRecommendationForAuthUser() {\r\n    this.quizService.getRecommendedQuizzes(this.recommendationLimit).subscribe(\r\n      resp => {\r\n        this.recommendationQuizzes = resp;\r\n      });\r\n  }\r\n\r\n  getRecommendationForAnonimus() {\r\n    this.quizService.RecommendationForAnonimus(this.recommendationLimit).subscribe(\r\n      resp => {\r\n        this.recommendationQuizzes = resp;\r\n      });\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\">\r\n  <div fxFlex=\"15\" [class.mat-elevation-z24] = true>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"create_button\" routerLink=\"/new_quiz\">Create Quiz</button>\r\n    <mat-divider></mat-divider>\r\n    <h3 align=\"center\"><b>Categories</b></h3>\r\n    <button mat-raised-button (click)=\"setPaginationParamDefault(); getAllQuizzes();\">All</button>\r\n    <mat-selection-list>\r\n      <mat-list *ngFor=\"let category of categories\">\r\n        <mat-list-item>\r\n          <button mat-raised-button\r\n                  (click)=\"setPaginationParamDefault(); setCurrentCategory(category.id); onPageChanged($event); \">{{category.name}}</button>\r\n        </mat-list-item>\r\n      </mat-list>\r\n    </mat-selection-list>\r\n  </div>\r\n  <div #maincontent fxFlex=\"71\" class=\"scroll main\">\r\n    <div class=\"input\" >\r\n      <mat-form-field  appearance=\"outline\">\r\n        <mat-label>Search quiz</mat-label>\r\n        <input matInput type=\"search\" placeholder=\"Search\" value=\"\" [(ngModel)]=\"userRequest\"\r\n               (ngModelChange)=\"this.userQuestionUpdate.next($event)\" >\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row wrap\" class=\"content\">\r\n      <div *ngFor=\"let quiz of quizzes\" fxLayout=\"row wrap\">\r\n        <app-quiz [quizData]=\"quiz\">\r\n        </app-quiz>\r\n      </div>\r\n    </div>\r\n    <mat-paginator [pageIndex]=\"pageIndex\" [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\r\n                   (page)=\"onPageChanged($event); maincontent.scrollTop = 0;\">\r\n    </mat-paginator>\r\n  </div>\r\n  <div fxFlex=\"14\" [class.mat-elevation-z24] = true>\r\n    <h3 id=\"recommended\" align=\"center\"><b>Recommended for you</b></h3>\r\n    <div class=\"scrollRec\">\r\n      <div *ngFor=\"let recomendedQuiz of recommendationQuizzes\" fxLayout=\"row wrap\">\r\n        <app-quiz [quizData]=\"recomendedQuiz\">\r\n        </app-quiz>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {RegistrationService} from '../service/registrationService/registration.service';\r\nimport {User} from '../models/user';\r\nimport {AuthenticationService} from '../service/loginService/authentication.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n\r\nexport enum Gender{\r\n  MALE,\r\n  FEMALE,\r\n  NOT_MENTIONED\r\n}\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  public Gender = Gender;\r\n\r\n  model: User = {\r\n    image: undefined,\r\n    notificationStatus: undefined,\r\n    about: '',\r\n    birthdate: undefined,\r\n    city: \"\",\r\n    countryId: \"\",\r\n    gender: undefined,\r\n    name: \"\",\r\n    rating: \"\",\r\n    role: undefined,\r\n    surname: \"\",\r\n    id:null,\r\n    email:'',\r\n    password:''\r\n  };\r\n\r\n  constructor(\r\n    public service: RegistrationService,\r\n    public authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      name: [''],\r\n      surname: [''],\r\n      gender: [Gender.NOT_MENTIONED],\r\n      birthdate: ['1973-01-01'],\r\n      city: [''],\r\n      about: [''],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    const input: User = JSON.parse(JSON.stringify(this.registerForm.value));\r\n    this.model.email = input.email;\r\n    this.model.password = input.password;\r\n    this.model.name = input.name;\r\n    this.model.surname = input.surname;\r\n    this.model.gender = input.gender;\r\n    this.model.birthdate = input.birthdate;\r\n    this.model.city = input.city;\r\n    this.model.about = input.about;\r\n    this.register();\r\n  }\r\n\r\n\r\n  register(): void{\r\n    this.service.postRegisterInfo(this.model).subscribe(\r\n      res =>{\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n          this.router.navigate(['/']);\r\n        });\r\n        alert(\"You registered\");\r\n      },\r\n      error => {\r\n        alert(error.error['message']);\r\n      }\r\n    );\r\n  }\r\n\r\n  get f() { return this.registerForm.controls; }\r\n}\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      return;\r\n    }\r\n\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n\r\n","<div fxLayout=\"row\" class >\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!authService.logIn\" >\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input  matInput formControlName=\"email\"  placeholder=\"Email\" name=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"/>\r\n        <mat-error *ngIf=\"f.email.errors?.required\">Email is required</mat-error>\r\n        <mat-error *ngIf=\"f.email.errors?.email\">Email must be a valid email address</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput formControlName=\"password\"  placeholder=\"Password\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required/>\r\n        <mat-error *ngIf=\"f.password.errors?.required\">Password is require</mat-error>\r\n        <mat-error *ngIf=\"f.password.errors?.pattern\">Must contain at least 8 or more characters</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Confirm password</mat-label>\r\n        <input type=\"password\"  matInput  placeholder=\"Password\" formControlName=\"confirmPassword\"  name=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.required\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.mustMatch\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\">Register</button>\r\n      <div *ngIf=\"authService.logIn\">\r\n        <p>For registration you must be not logged in</p>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n","import { Achievement } from '../../models/achievement.model';\r\nimport { Category } from '../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AchievementsService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private GET_ACHIEVEMENTS = `${this.BASE_URL}\\\\achievements`;\r\n  private GET_ACHIEVEMENT_CATEGORIES = `${this.BASE_URL}\\\\achievements\\\\categories`;\r\n  private GET_ACHIEVEMENTS_BY_CATEGORY = `${this.BASE_URL}\\\\achievements\\\\by_category\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAchievements(): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS);\r\n  }\r\n\r\n  getAchievementCategories(): Observable<Category[]> {\r\n    return this.http.get<Category[]>(this.GET_ACHIEVEMENT_CATEGORIES);\r\n  }\r\n\r\n  getAchievementsByCategory(categoryId: number): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS_BY_CATEGORY + categoryId);\r\n  }\r\n\r\n  getAchievementsByUser(userId: number): Observable<Achievement[]> {\r\n    return this.http.get<Achievement[]>(this.GET_ACHIEVEMENTS + `\\\\` + userId);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {CurrentUserService} from \"../current-user.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnouncementService {\n\n  private BASE_URL = window[\"configureApiBaseUrl\"];\n  private GET_ANNOUNCEMENT = `${this.BASE_URL}\\\\announce\\\\dash\\\\`;\n\n  constructor(private currentUserService: CurrentUserService,\n              private http: HttpClient) {\n  }\n\n\n  getAnnouncement(): Observable<any> {\n    return this.http.get(this.GET_ANNOUNCEMENT + \"?userId=\" + this.currentUserService.getCurrentUser().id)\n  }\n}\n","import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanDeactivateGuardService {\r\n\r\n  canDeactivate(component: CanComponentDeactivate,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState: RouterStateSnapshot) {\r\n    if (currentState.url.includes('/game/start') && nextState.url.includes('/game/question')) {\r\n      return true;\r\n    }\r\n\r\n    if (currentState.url.includes('/game/question') && (nextState.url.includes('/game/question') || nextState.url.includes('/game/finish'))) {\r\n      return true;\r\n    }\r\n\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n}\r\n","import { Category } from './../../models/category.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private CATEGORIES_URL = `${this.BASE_URL}\\\\categories`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCategories(): Observable<any> {\r\n    return this.http.get<Category[]>(this.CATEGORIES_URL);\r\n  }\r\n\r\n  getCategoryByName(name: String) {\r\n    return this.http.get(`${this.CATEGORIES_URL}\\\\${name}`);\r\n  }\r\n}\r\n","import { User } from './../models/user';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n\r\n  constructor() { }\r\n\r\n  getCurrentUser(): User {\r\n    return JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n}\r\n","import { Quiz } from './../../models/quiz.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private TOP_QUIZZES = `${this.BASE_URL}\\\\quizzes\\\\top_quizzes`;\r\n  private RECENT_QUIZZES = `${this.BASE_URL}\\\\quizzes\\\\recent_quizzes`;\r\n  private GET_RATING = `${this.BASE_URL}\\\\api\\\\users\\\\rating\\\\`;\r\n  private GET_ACHIEVEMENTS_TOTAL = `${this.BASE_URL}\\\\achievements\\\\count_total`;\r\n  private GET_ACHIEVEMENTS_FOR_USER = `${this.BASE_URL}\\\\achievements\\\\count\\\\`;\r\n  private GET_RECOMMENDATIONS = `${this.BASE_URL}\\\\quizzes\\\\recommendations\\\\`;\r\n  private GET_QUIZ_IMAGE = `${this.BASE_URL}\\\\quizzes\\\\get_image\\\\`;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTopQuizzes(limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.TOP_QUIZZES + \"?limit=\" + limit);\r\n  }\r\n\r\n  getTopQuizzesByCategory(categoryId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.TOP_QUIZZES + '/' + categoryId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getRecentQuizzes(userId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.RECENT_QUIZZES + '/' + userId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getRating(userId: Number): Observable<number> {\r\n    return this.http.get<number>(this.GET_RATING + userId);\r\n  }\r\n\r\n  getAchievementsTotal(): Observable<number> {\r\n    return this.http.get<number>(this.GET_ACHIEVEMENTS_TOTAL);\r\n  }\r\n\r\n  getAchievementsForUser(userId: number): Observable<number> {\r\n    return this.http.get<number>(this.GET_ACHIEVEMENTS_FOR_USER + userId);\r\n  }\r\n\r\n  getRecommendations(userId: number, limit: number): Observable<Quiz[]> {\r\n    return this.http.get<Quiz[]>(this.GET_RECOMMENDATIONS + userId + \"?limit=\" + limit);\r\n  }\r\n\r\n  getQuizImage(quizId: number): Observable<any> {\r\n    return this.http.get<any>(this.GET_QUIZ_IMAGE + quizId);\r\n  }\r\n}\r\n","import { GameStateService } from './../gameStateService/game-state.service';\r\nimport { Router } from '@angular/router';\r\nimport { Player } from './../../models/game.model';\r\nimport * as SockJs from 'sockjs-client';\r\n\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Game } from 'src/app/models/game.model';\r\nimport { Observable, ReplaySubject, of } from 'rxjs';\r\nimport { Answer } from 'src/app/models/answer.model';\r\nimport { map, take } from 'rxjs/operators';\r\nimport {RxStomp, RxStompConfig} from \"@stomp/rx-stomp\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  BASE_URL: string = window[\"configureApiBaseUrl\"];\r\n  CREATE_GAME: string = `${this.BASE_URL}\\\\play\\\\addSession`;\r\n  webSocketEndPoint: string = `${this.BASE_URL}\\\\ws`;\r\n  client: RxStomp;\r\n\r\n  gameObservable: Observable<string>;\r\n  gameId: number;\r\n  player: Player;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private gameStateService: GameStateService) { }\r\n\r\n  createGame(game: Game): Observable<number> {\r\n    return this.http.post<number>(this.CREATE_GAME, game);\r\n  }\r\n\r\n  initializeWebSocketConnection(gameId: number, player: Player) {\r\n    this.gameId = gameId;\r\n    this.player = player;\r\n\r\n    const that = this;\r\n\r\n    const config = new RxStompConfig();\r\n    config.webSocketFactory = function () { return new SockJs(that.webSocketEndPoint); };\r\n\r\n    this.client = new RxStomp();\r\n    this.client.configure(config);\r\n\r\n    this.gameStateService.setGameState(this.gameId, false);\r\n\r\n    this.gameObservable = this.client.watch(`/play/game/${this.gameId}`).pipe(\r\n      map(resp => resp.body)\r\n    );\r\n  }\r\n\r\n  connect(): void {\r\n    this.client.activate();\r\n    this.client.publish({ destination: `/app/play/game/${this.gameId}/user`, body: JSON.stringify(this.player) });\r\n  }\r\n\r\n  waitGameStart(): Observable<string> {\r\n    return this.gameObservable;\r\n  }\r\n\r\n  subscribeQuestion() {\r\n    this.gameObservable.subscribe(\r\n      resp => {\r\n        let data = JSON.parse(resp);\r\n        if (data) {\r\n          if (data['question']) {\r\n            this.gameStateService.setGameState(this.gameId, true);\r\n            this.routeQuestion(data);\r\n          }\r\n          else {\r\n            if (this.gameStateService.getGameState(this.gameId)) {\r\n              this.routeResults();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  subscribeRating(): Observable<Player[]> {\r\n    return this.gameObservable.pipe(\r\n      map(resp => {\r\n        let data = JSON.parse(resp);\r\n        this.disconnect();\r\n        return data['players'];\r\n      })\r\n    );\r\n  }\r\n\r\n  startGame() {\r\n    this.client.publish({ destination: `/app/play/game/${this.gameId}/start` });\r\n  }\r\n\r\n  postAnswer(answers: Answer[]) {\r\n    this.client.publish({ destination: `/app/play/game/${this.gameId}/sendAnswer`, body: JSON.stringify({ answers: answers, player: this.player }) });\r\n  }\r\n\r\n  getQuestion(): Observable<string> {\r\n    return this.gameObservable;\r\n  }\r\n\r\n  routeQuestion(data: any) {\r\n    let link = `/game/question/${this.gameId}/${data['questionNumber']}`;\r\n    this.router.navigate([link],\r\n      {\r\n        state: {\r\n          questionNumber: data['questionNumber'],\r\n          question: data['question'],\r\n          questionTimer: data['questionTimer'],\r\n          player: this.player\r\n        }\r\n      });\r\n  }\r\n\r\n  routeResults() {\r\n    let link = `/game/finish/${this.gameId}`;\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n  finishGame() {\r\n    this.client.publish({ destination: `/app/play/game/${this.gameId}/finish` });\r\n  }\r\n\r\n  manageGameState() {\r\n    if (!this.gameStateService.getGameState(this.gameId)) {\r\n      this.gameStateService.setGameState(this.gameId, true);\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this.gameStateService.deleteGame(this.gameId);\r\n    this.client.deactivate();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameStateService {\r\n\r\n  constructor() { }\r\n\r\n  setGameState(gameId: number, active: boolean) {\r\n    sessionStorage.setItem(gameId.toString(), String(active));\r\n  }\r\n\r\n  getGameState(gameId: number): boolean {\r\n    return JSON.parse(sessionStorage.getItem(gameId.toString()));\r\n  }\r\n\r\n  deleteGame(gameId: number) {\r\n    sessionStorage.removeItem(gameId.toString());\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private SAVE_IMAGE = `${this.BASE_URL}\\\\image`;\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  saveImage(image: File): Observable<any> {\r\n    if (image == null) {\r\n      return of(\"\");\r\n    }\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.SAVE_IMAGE, uploadImg, { responseType: 'text' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {ShareIdService} from '../profileService/share-id.service';\r\nimport {CurrentUserService} from \"../current-user.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/user\";\r\nimport {UserActive} from \"../../models/user-active\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private LOGIN_API_URL = `${this.BASE_URL}\\\\auth\\\\login`;\r\n  private USER_BY_CODE_URL = `${this.BASE_URL}\\\\api\\\\users\\\\activate\\\\`;\r\n  private SET_PASSWORD_URL = `${this.BASE_URL}\\\\profile\\\\updatePassword\\\\`;\r\n\r\n  constructor(private http: HttpClient,\r\n              private router: Router,\r\n              private shareId: ShareIdService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  login(email: string, password: string) {\r\n\r\n\r\n    this.http.post(this.LOGIN_API_URL, {email, password})\r\n        .subscribe((resp: any) => {\r\n              localStorage.setItem('currentUser', JSON.stringify(resp));\r\n              this.shareId.setId(JSON.parse(localStorage.getItem('currentUser')).id);\r\n              window.location.replace('/');\r\n            },\r\n            error => {\r\n              alert(error.error['message']);\r\n            });\r\n\r\n  }\r\n\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n    window.location.replace('/dashboard');\r\n  }\r\n\r\n  public get logIn(): boolean {\r\n    return (localStorage.getItem('currentUser') != null);\r\n  }\r\n\r\n  getUserbyCode(code: string): Observable<User>{\r\n    return this.http.get<User>(this.USER_BY_CODE_URL + code);\r\n  }\r\n  setPassword(userId: string, newPassword: string): Observable<any>{\r\n    return this.http.post(this.SET_PASSWORD_URL + userId, newPassword);\r\n  }\r\n\r\n}\r\n","import { Quiz } from './../../models/add-quiz.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewQuizService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private NEW_QUIZ_URL = `${this.BASE_URL}\\\\quizzes\\\\new_quiz`;\r\n  private QUIZZES_INFO = `${this.BASE_URL}\\\\quizzes\\\\info\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postQuiz(quiz: Quiz): Observable<Quiz> {\r\n    return this.http.post<Quiz>(this.NEW_QUIZ_URL, quiz);\r\n  }\r\n\r\n  getQuizInfo(quizId: string): Observable<Quiz> {\r\n    return this.http.get<Quiz>(this.QUIZZES_INFO + quizId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {StatusType} from \"../../models/quiz.model\";\r\nimport {AuthenticationService} from \"../loginService/authentication.service\";\r\nimport {CurrentUserService} from \"../current-user.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PendingQuizzesService {\r\n\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private PENDING_QUIZZES_URL = `${this.BASE_URL}\\\\quizzes\\\\status\\\\`;\r\n  private ASSIGNED_QUIZZES_URL = `${this.BASE_URL}\\\\quizzes\\\\moderatorQuizzes\\\\`;\r\n  private GET_FILTERED_PENDING_QUIZZES_URL = `${this.BASE_URL}\\\\quizzes\\\\filter\\\\`;\r\n\r\n  constructor(private http: HttpClient,\r\n              private authService: AuthenticationService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  getPendingQuizzes(pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.PENDING_QUIZZES_URL + StatusType.PENDING.toUpperCase() + '/' + pageSize + '/' + pageIndex);\r\n  }\r\n\r\n\r\n  getAssignedQuizzes(moderatorId, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.ASSIGNED_QUIZZES_URL  + moderatorId + '/' + pageSize + '/' + pageIndex);\r\n  }\r\n\r\n\r\n  getFilteredPendingQuizzes(searchText: string, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_FILTERED_PENDING_QUIZZES_URL + searchText + '/' + pageSize + '/' + pageIndex );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../models/user';\r\nimport {Quiz} from '../../models/quiz';\r\nimport {NotificationStatus} from '../../models/notification-status.enum';\r\nimport {CurrentUserService} from \"../current-user.service\";\r\nimport {AuthenticationService} from \"../loginService/authentication.service\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private PROFILE_URL = `${this.BASE_URL}\\\\profile\\\\myprofile\\\\`;\r\n  private FRIEND_LIST_URL = `${this.BASE_URL}\\\\profile\\\\myfriends\\\\`;\r\n  private ADMIN_USERS_LIST_URL = `${this.BASE_URL}\\\\profile\\\\adminUsers`;\r\n  private UPDATE_PROFILE_URL = `${this.BASE_URL}\\\\profile\\\\myprofile\\\\update`;\r\n  private UPDATE_PASSWORD_URL = `${this.BASE_URL}\\\\profile\\\\updatePassword\\\\`;\r\n  private UPDATE_ACTIVE_STATUS_URL = `${this.BASE_URL}\\\\profile\\\\updateActive\\\\`;\r\n  private GET_QUIZZES_URL = `${this.BASE_URL}\\\\profile\\\\myquizzes\\\\`;\r\n  private GET_FAVORITE_URL = `${this.BASE_URL}\\\\profile\\\\myfavorite\\\\`;\r\n  private GET_CATEGORY_NAME = `${this.BASE_URL}\\\\profile\\\\category\\\\`;\r\n  private UPDATE_USER_IMAGE = `${this.BASE_URL}\\\\profile\\\\newicon\\\\`;\r\n  private GET_USER_IMAGE_BY_USER_ID = `${this.BASE_URL}\\\\profile\\\\getimage\\\\`;\r\n  private UPDATE_GET_NOTIFICATION = `${this.BASE_URL}\\\\profile\\\\status\\\\`;\r\n  private GET_PLAYED_GAMES = `${this.BASE_URL}\\\\profile\\\\played\\\\`;\r\n  private GET_GAME_RESULT = `${this.BASE_URL}\\\\profile\\\\gameresult\\\\`;\r\n  private DELETE_ADMIN_URL = `${this.BASE_URL}\\\\profile\\\\deleteAdminUser\\\\`;\r\n  private GET_FILTERED_USERS = `${this.BASE_URL}\\\\profile\\\\adminUsers\\\\filter\\\\`;\r\n  private GET_USERS_BY_ROLE = `${this.BASE_URL}\\\\profile\\\\roleStatus\\\\`;\r\n  private ADD_ADMIN_USER_URL = `${this.BASE_URL}\\\\api\\\\users\\\\addAdminUser`;\r\n  private GET_REJECTED_QUIZZES = `${this.BASE_URL}\\\\profile\\\\reject\\\\`;\r\n  private GET_REJECTED_MESSAGES = `${this.BASE_URL}\\\\profile\\\\rejectMessage\\\\`;\r\n  private ASSIGNED_QUIZZES_URL = `${this.BASE_URL}\\\\profile\\\\moderatorQuizzes\\\\`;\r\n  private userId = this.currentUserService.getCurrentUser().id;\r\n\r\n  constructor(private http: HttpClient,\r\n              private authService: AuthenticationService,\r\n              private currentUserService: CurrentUserService) { }\r\n\r\n  getProfile(userId: string): Observable<User> {\r\n    return this.http.get<User>(this.PROFILE_URL + userId);\r\n  }\r\n\r\n  updateProfile(user: User): Observable<User> {\r\n    user.id = this.userId;\r\n    return this.http.post<User>(this.UPDATE_PROFILE_URL, user);\r\n  }\r\n\r\n  updateAdminUser(user: User): Observable<User>{\r\n    return this.http.post<User>(this.UPDATE_PROFILE_URL, user);\r\n  }\r\n\r\n    deleteAdminUsers(id): Observable<User>{\r\n      return this.http.delete<User>(this.DELETE_ADMIN_URL + id);\r\n    }\r\n    updateActiveStatusUser(id): Observable<any>{\r\n      return this.http.post(this.UPDATE_ACTIVE_STATUS_URL + id, 'Change active status');\r\n    }\r\n\r\n  updatePassword(newPassword: string): Observable<any>{\r\n    return this.http.post(this.UPDATE_PASSWORD_URL + this.userId, newPassword);\r\n  }\r\n\r\n  getFriends(pageSize: number, pageNumber: number, sortDirection: any): Observable<any>{\r\n    return this.http.get<User[]>(this.FRIEND_LIST_URL + pageSize + '/' + pageNumber + '/' + this.userId + '?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));  //active direction\r\n  }\r\n\r\n  getUserQuizzes(pageSize: number, pageNumber: number, sortDirection: any): Observable<any>{\r\n    return this.http.get<Quiz[]>(this.GET_QUIZZES_URL + pageSize + '/' + pageNumber + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  getFavoriteGames(pageSize: number, pageNumber: number): Observable<any>{\r\n    return this.http.get<Quiz[]>(this.GET_FAVORITE_URL + this.userId + '/' + pageSize + '/' + pageNumber);\r\n  }\r\n  getAdminUsers(pageSize: number, pageIndex: number): Observable<any>{\r\n    if (!pageIndex){ pageIndex = 0;}\r\n    return this.http.get<User[]>(this.ADMIN_USERS_LIST_URL + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n  getUsersByRoleStatus(userRole: string, userStatus: string, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_USERS_BY_ROLE + userRole + '/' + userStatus + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  getFilteredUsers(searchText: string, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_FILTERED_USERS + searchText + '/' + pageSize + '/' + pageIndex);\r\n  }\r\n\r\n  getCategoryName(categoryId: string): Observable<any>{\r\n    return this.http.get(this.GET_CATEGORY_NAME + categoryId);\r\n  }\r\n\r\n  updateImage(image: File): Observable<any> {\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.UPDATE_USER_IMAGE + this.userId, uploadImg);\r\n  }\r\n\r\n  getProfileImage(id: string): Observable<any> {\r\n    return this.http.get(this.GET_USER_IMAGE_BY_USER_ID + id);\r\n  }\r\n\r\n  updateNotificationStatus(status: NotificationStatus): Observable<any> {\r\n    return this.http.post(this.UPDATE_GET_NOTIFICATION + this.userId, status);\r\n  }\r\n\r\n  getUserNotificationStatus(): Observable<NotificationStatus> {\r\n    return this.http.get<NotificationStatus>(this.UPDATE_GET_NOTIFICATION + this.userId);\r\n  }\r\n\r\n  filterFriendsRequest(userSearch: string, pageSize: number, pageIndex: number, sortDirection: any): Observable<any> {\r\n    return this.http.get(this.FRIEND_LIST_URL + userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  filterQuizzesRequest(userSearch: string, pageSize: number, pageIndex: number, sortDirection: any): Observable<any> {\r\n    return this.http.get(this.GET_QUIZZES_URL + userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId +'?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction));\r\n  }\r\n\r\n  filterFavoriteRequest(userSearch: string, pageSize: number, pageIndex: number): Observable<any>{\r\n    return this.http.get(this.GET_QUIZZES_URL + userSearch + '/' + pageSize + '/' + pageIndex + '/' + this.userId);\r\n  }\r\n\r\n  getPlayedGames(pageSize: number, pageIndex: number, sortDirection: any, userSearch?: string): Observable<any> {\r\n    console.log(userSearch);\r\n    return this.http.get(this.GET_PLAYED_GAMES  + pageSize + '/' + pageIndex + '/' + this.userId +\r\n      '?sort=' + (sortDirection==undefined? \"\": sortDirection.active + ' ' + sortDirection.direction) + '&' +\r\n      'search=' + (userSearch==undefined? \"\": userSearch));\r\n  }\r\n\r\n  getGamesResult(gameId: number): Observable<any> {\r\n    return this.http.get(this.GET_GAME_RESULT + gameId);\r\n  }\r\n\r\n  postRegisterInfo(user: User): Observable<User> {\r\n    return this.http.post<User>(this.ADD_ADMIN_USER_URL, user);\r\n  }\r\n\r\n  getRejectedQuizzes(rejectedPageSize: number, rejectedPageIndex: number, rejectedSortDirection: any): Observable<any> {\r\n    return this.http.get(this.GET_REJECTED_QUIZZES + rejectedPageSize + '/' + rejectedPageIndex + '/' + this.userId +'?sort=' + (rejectedSortDirection==undefined? \"\": rejectedSortDirection.active + ' ' + rejectedSortDirection.direction));\r\n  }\r\n\r\n  getRejectMessages(quizId: number): Observable<any> {\r\n    return this.http.get(this.GET_REJECTED_MESSAGES + quizId);\r\n  }\r\n  getAssignedQuizzes(moderatorId): Observable<any> {\r\n    return this.http.get(this.ASSIGNED_QUIZZES_URL  + moderatorId);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareIdService {\r\n  private id: string;\r\n  private email: string;\r\n  constructor() { }\r\n\r\n  public shareId(){\r\n    return this.id;\r\n  }\r\n\r\n  public setId(id: string){\r\n    this.id = id;\r\n  }\r\n\r\n  public shareEmail(){\r\n    return this.email;\r\n  }\r\n\r\n  public setEmail(email: string){\r\n    this.email = email;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Question } from 'src/app/models/question.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private UPDATE_QUESTION_IMAGE = `${this.BASE_URL}\\\\quiz\\\\question\\\\new_image\\\\`;\r\n  private GET_QUESTIONS = `${this.BASE_URL}\\\\quiz\\\\question\\\\quiz\\\\`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateImage(questionId: number, image: File): Observable<any> {\r\n    const uploadImg = new FormData();\r\n    uploadImg.append('image', image);\r\n    return this.http.post(this.UPDATE_QUESTION_IMAGE + questionId, uploadImg);\r\n  }\r\n\r\n  getQuestions(id: string): Observable<Question[]> {\r\n    console.log('service ' + this.http.get<Question[]>(this.GET_QUESTIONS + id));\r\n    return this.http.get<Question[]>(this.GET_QUESTIONS + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ModeratorComment} from \"../../models/moderator-comment\";\r\nimport {QuizInfo} from \"../../models/quiz-info\";\r\nimport {StatusType} from \"../../models/status-type.enum\";\r\n\r\nclass QuizCheckModel {\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuizCheckService {\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private QUIZZES_URL = `${this.BASE_URL}\\\\quizzes\\\\quizCheck\\\\`;\r\n  private UPDATE_QUIZ_STATUS_URL = `${this.BASE_URL}\\\\quizzes\\\\update\\\\status\\\\`;\r\n  private ADD_MODERATOR_COMMENT_URL = `${this.BASE_URL}\\\\quizzes\\\\addComment\\\\`;\r\n  private ASSIGN_QUIZ = `${this.BASE_URL}\\\\quizzes\\\\assignment\\\\`;\r\n  private UNSIGN_QUIZ_URL = `${this.BASE_URL}\\\\quizzes\\\\unsign\\\\`;\r\n  private GET_COMMENTS_URL = `${this.BASE_URL}\\\\quizzes\\\\comments\\\\`;\r\n  private QUIZZES_INFO_URL = `${this.BASE_URL}\\\\quizzes\\\\info\\\\`;\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getQuizById(id: string): Observable<QuizCheckModel>{\r\n    return this.http.get<QuizCheckModel>(this.QUIZZES_URL + id);\r\n  }\r\n\r\n  updateStatusQuiz(id, status: StatusType): Observable<any>{\r\n    return this.http.post(this.UPDATE_QUIZ_STATUS_URL + id, status);\r\n  }\r\n  addComment(comment: ModeratorComment): Observable<any>{\r\n    return this.http.post(this.ADD_MODERATOR_COMMENT_URL, comment);\r\n  }\r\n  assignQuiz(quizId, moderatorId): Observable<any> {\r\n    return this.http.post(this.ASSIGN_QUIZ + quizId, moderatorId);\r\n  }\r\n  unsignQuiz(currentQuizId: number) {\r\n    return this.http.delete(this.UNSIGN_QUIZ_URL + currentQuizId);\r\n  }\r\n  getCommentHistory(currentQuizId: string): Observable<any> {\r\n    return this.http.get(this.GET_COMMENTS_URL + currentQuizId);\r\n  }\r\n  getQuizInfoById(id: string){\r\n    return this.http.get<QuizInfo>(this.QUIZZES_INFO_URL + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport {Quiz} from \"../../models/quiz.model\";\r\nimport {AuthenticationService} from \"../loginService/authentication.service\";\r\nimport {CurrentUserService} from \"../current-user.service\";\r\nimport { QuizInfo } from \"../../models/quiz-info\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuizService {\r\n\r\n  private BASE_URL = window[\"configureApiBaseUrl\"];\r\n  private QUIZZES_URL = `${this.BASE_URL}\\\\quizzes`;\r\n  private QUIZZES_INFO_URL = `${this.BASE_URL}\\\\quizzes\\\\info\\\\`;\r\n  private GET_QUIZ_BY_CATEGORY = `${this.QUIZZES_URL}\\\\categories\\\\`;\r\n  private GET_FILTERED_QUIZ = `${this.QUIZZES_URL}\\\\filter\\\\`;\r\n  private MARK_QUIZ_AS_FAVORITE = `${this.QUIZZES_URL}\\\\mark\\\\`;\r\n  private UNMARK_QUIZ_AS_FAVORITE = `${this.QUIZZES_URL}\\\\unmark\\\\`;\r\n  private GET_RECOMMENDED_QUIZZES = `${this.QUIZZES_URL}\\\\recommendations\\\\`;\r\n  private GET_POPULAR_QUIZZES = `${this.QUIZZES_URL}\\\\popular\\\\`;\r\n  private UNSIGN_ALL_MODERATOR_QUIZ_URL = `${this.QUIZZES_URL}\\\\unsignAll\\\\`;\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService: AuthenticationService,\r\n    private currentUserService: CurrentUserService) { }\r\n\r\n  getQuizzes(pageSize: number, pageIndex: number): Observable<any> {\r\n    if (!pageIndex) { pageIndex = 0; }\r\n    return this.http.get<Quiz[]>(this.QUIZZES_URL + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn ? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  getQuizById(id: string) {\r\n    return this.http.get<Quiz>(this.QUIZZES_URL + id);\r\n  }\r\n\r\n  getQuizInfoById(id: string) {\r\n    return this.http.get<QuizInfo>(this.QUIZZES_INFO_URL + id);\r\n  }\r\n\r\n  getQuizzesByCategory(categoryId: number, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_QUIZ_BY_CATEGORY + categoryId + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn ? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  getFilteredQuizzes(searcText: string, pageSize: number, pageIndex: number): Observable<any> {\r\n    return this.http.get(this.GET_FILTERED_QUIZ + searcText + '/' + pageSize + '/' + pageIndex + '/' + (this.authService.logIn ? this.currentUserService.getCurrentUser().id : 0));\r\n  }\r\n\r\n  markQuizAsFavorite(quizId: string, userId: string): Observable<any> {\r\n    return this.http.post(this.MARK_QUIZ_AS_FAVORITE + quizId + '/' + userId, \"\");\r\n  }\r\n\r\n  unmarkQuizAsFavorite(quizId: string, userId: string): Observable<any> {\r\n    return this.http.post(this.UNMARK_QUIZ_AS_FAVORITE + quizId + '/' + userId, \"\");\r\n  }\r\n\r\n  getRecommendedQuizzes(limit: number): Observable<any> {\r\n    return this.http.get<Quiz[]>(this.GET_RECOMMENDED_QUIZZES + this.currentUserService.getCurrentUser().id + '?limit=' + limit);\r\n  }\r\n\r\n  RecommendationForAnonimus(limit: number): Observable<any> {\r\n    return this.http.get<Quiz[]>(this.GET_POPULAR_QUIZZES + limit);\r\n  }\r\n  unsignAllQuiz(moderatorId: number) {\r\n    return this.http.delete(this.UNSIGN_ALL_MODERATOR_QUIZ_URL + moderatorId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatingService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private GET_RATING = `${this.BASE_URL}\\\\api\\\\users\\\\rating`;\r\n  private GET_RATING_IN_RANGE = `${this.BASE_URL}\\\\api\\\\users\\\\rating\\\\range\\\\`;\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRating(from: number, to: number): Observable<User[]> {\r\n    return this.http.get<User[]>(this.GET_RATING + \"?from=\" + from + \"&to=\" + to);\r\n  }\r\n\r\n  getRatingRange(userId: number, range: number): Observable<User[]> {\r\n    return this.http.get<User[]>(this.GET_RATING_IN_RANGE + userId + \"?range=\" + range);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n  private BASE_URL = window['configureApiBaseUrl'];\r\n  private REGISTRATION_URL = `${this.BASE_URL}\\\\auth\\\\register`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postRegisterInfo(user: User): Observable<User> {\r\n    return this.http.post<User>(this.REGISTRATION_URL, user);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ProfileService} from '../service/profileService/profile.service';\r\nimport {AuthenticationService} from '../service/loginService/authentication.service';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {UserActive} from '../models/user-active';\r\nimport {User} from \"../models/user\";\r\n\r\n@Component({\r\n  selector: 'app-set-password',\r\n  templateUrl: './set-password.component.html',\r\n  styleUrls: ['./set-password.component.css']\r\n})\r\nexport class SetPasswordComponent implements OnInit {\r\n  public changePasswordForm: FormGroup;\r\n  submitted = false;\r\n  newPassword: string;\r\n  code: string;\r\n  userId: number;\r\n  public user: User;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private authService: AuthenticationService,\r\n              private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      switchMap(params => params.getAll('code'))\r\n    )\r\n      .subscribe(data => this.code = data);\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n    if (localStorage.getItem('currentUser') !== null) {\r\n      this.logout();\r\n    }\r\n    this.getUser();\r\n  }\r\n  get f() { return this.changePasswordForm.controls; }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n    window.location.replace('/activate/'  + this.code);\r\n  }\r\n\r\n  public changingPassFormValidation(){\r\n    this.submitted = true;\r\n\r\n    if (this.changePasswordForm.invalid) {\r\n      return;\r\n    }\r\n    this.newPassword = this.changePasswordForm.value.password;\r\n    this.setPassword();\r\n    window.location.replace('/login');\r\n  }\r\n\r\n  setPassword() {\r\n    this.authService.setPassword(this.user.id, this.newPassword).subscribe(\r\n      (resp: any) => {\r\n        alert('Password setted');\r\n      },\r\n      error => {\r\n        alert('Something wrong while save password');\r\n      }\r\n    );\r\n  }\r\n  getUser(){\r\n    this.authService.getUserbyCode(this.code).subscribe(\r\n      (resp: any) => {\r\n        this.user = resp;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        alert('Something wrong with downloading user');\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n        return;\r\n      }\r\n\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n  };\r\n}\r\n\r\n","<div *ngIf=\"user\">\r\n<div fxLayout=\"row\" class >\r\n  <div fxFlex=\"30\"></div>\r\n  <div fxFlex=\"center center\">\r\n    <h2>{{user.email}}</h2>\r\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"changingPassFormValidation()\">\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input type=\"password\"  matInput formControlName=\"password\"  placeholder=\"Password\"  name=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required/>\r\n        <mat-error *ngIf=\"f.password.errors?.required\">Password is require</mat-error>\r\n        <mat-error *ngIf=\"f.password.errors?.pattern\">Must contain at least 8 or more characters</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label> Confirm password</mat-label>\r\n        <input type=\"password\"  matInput  placeholder=\"Password\" formControlName=\"confirmPassword\"  name=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.required\">Confirm Password is required</mat-error>\r\n        <mat-error *ngIf=\"f.confirmPassword.errors?.mustMatch\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n      <br>\r\n\r\n      <button mat-raised-button type=\"submit\">Set password</button>\r\n\r\n    </form>\r\n  </div>\r\n  <div fxFlex=\"30\"></div>\r\n</div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}